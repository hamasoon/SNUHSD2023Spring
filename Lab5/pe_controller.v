/* Generated by Amaranth Yosys 0.25 (PyPI ver 0.25.0.0.post70, git sha1 e02b7f64b) */

(* \amaranth.hierarchy  = "top.pe.U$$0" *)
(* generator = "Amaranth" *)
module \U$$0 (clk, in_a, in_b, out_d, in_init, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$46  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$10 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$12 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$3 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$5 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] cnt = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] \cnt$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg fsm_state = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg \fsm_state$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  input [9:0] in_init;
  wire [9:0] in_init;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  wire [7:0] mac_in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  reg mac_in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  wire [7:0] mac_in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  reg mac_in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  reg mac_in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  wire [31:0] mac_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  wire mac_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg out_d_valid = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg \out_d_valid$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:23" *)
  wire out_ovf;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *) 1'h1;
  assign \$12  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$14  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$1  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$3  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$5  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$7  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  always @(posedge clk)
    out_d_valid <= \out_d_valid$next ;
  always @(posedge clk)
    cnt <= \cnt$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  mac mac (
    .clk(clk),
    .in_a(mac_in_a),
    .in_a_valid(mac_in_a_valid),
    .in_b(mac_in_b),
    .in_b_valid(mac_in_b_valid),
    .in_rst(mac_in_rst),
    .out_d(mac_out_d),
    .out_ovf(mac_out_ovf),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$46 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_a_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_a_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$46 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_b_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_b_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$46 ) begin end
    \fsm_state$next  = fsm_state;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$1 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \fsm_state$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$3 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \fsm_state$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$46 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$5 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                mac_in_rst = 1'h1;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:57" */
            default:
                mac_in_rst = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_rst = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$46 ) begin end
    \cnt$next  = cnt;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$7 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \cnt$next  = in_init;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          \cnt$next  = \$10 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \cnt$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$46 ) begin end
    \out_d_valid$next  = out_d_valid;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$12 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \out_d_valid$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$14 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \out_d_valid$next  = 1'h1;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d_valid$next  = 1'h0;
    endcase
  end
  assign \$9  = \$10 ;
  assign out_ovf = mac_out_ovf;
  assign out_d = mac_out_d;
  assign mac_in_b = in_b;
  assign mac_in_a = in_a;
endmodule

(* \amaranth.hierarchy  = "top.pe.U$$1" *)
(* generator = "Amaranth" *)
module \U$$1 (clk, in_a, in_b, out_d, in_init, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$47  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$10 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$12 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$3 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$5 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] cnt = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] \cnt$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg fsm_state = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg \fsm_state$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  input [9:0] in_init;
  wire [9:0] in_init;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  wire [7:0] mac_in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  reg mac_in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  wire [7:0] mac_in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  reg mac_in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  reg mac_in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  wire [31:0] mac_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  wire mac_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg out_d_valid = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg \out_d_valid$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:23" *)
  wire out_ovf;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *) 1'h1;
  assign \$12  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$14  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$1  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$3  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$5  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$7  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  always @(posedge clk)
    out_d_valid <= \out_d_valid$next ;
  always @(posedge clk)
    cnt <= \cnt$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  \mac$1  mac (
    .clk(clk),
    .in_a(mac_in_a),
    .in_a_valid(mac_in_a_valid),
    .in_b(mac_in_b),
    .in_b_valid(mac_in_b_valid),
    .in_rst(mac_in_rst),
    .out_d(mac_out_d),
    .out_ovf(mac_out_ovf),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$47 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_a_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_a_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$47 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_b_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_b_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$47 ) begin end
    \fsm_state$next  = fsm_state;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$1 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \fsm_state$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$3 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \fsm_state$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$47 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$5 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                mac_in_rst = 1'h1;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:57" */
            default:
                mac_in_rst = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_rst = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$47 ) begin end
    \cnt$next  = cnt;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$7 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \cnt$next  = in_init;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          \cnt$next  = \$10 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \cnt$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$47 ) begin end
    \out_d_valid$next  = out_d_valid;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$12 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \out_d_valid$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$14 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \out_d_valid$next  = 1'h1;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d_valid$next  = 1'h0;
    endcase
  end
  assign \$9  = \$10 ;
  assign out_ovf = mac_out_ovf;
  assign out_d = mac_out_d;
  assign mac_in_b = in_b;
  assign mac_in_a = in_a;
endmodule

(* \amaranth.hierarchy  = "top.pe.U$$2" *)
(* generator = "Amaranth" *)
module \U$$2 (clk, in_a, in_b, out_d, in_init, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$48  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$10 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$12 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$3 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$5 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] cnt = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] \cnt$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg fsm_state = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg \fsm_state$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  input [9:0] in_init;
  wire [9:0] in_init;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  wire [7:0] mac_in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  reg mac_in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  wire [7:0] mac_in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  reg mac_in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  reg mac_in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  wire [31:0] mac_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  wire mac_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg out_d_valid = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg \out_d_valid$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:23" *)
  wire out_ovf;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *) 1'h1;
  assign \$12  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$14  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$1  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$3  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$5  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$7  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  always @(posedge clk)
    out_d_valid <= \out_d_valid$next ;
  always @(posedge clk)
    cnt <= \cnt$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  \mac$2  mac (
    .clk(clk),
    .in_a(mac_in_a),
    .in_a_valid(mac_in_a_valid),
    .in_b(mac_in_b),
    .in_b_valid(mac_in_b_valid),
    .in_rst(mac_in_rst),
    .out_d(mac_out_d),
    .out_ovf(mac_out_ovf),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$48 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_a_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_a_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$48 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_b_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_b_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$48 ) begin end
    \fsm_state$next  = fsm_state;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$1 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \fsm_state$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$3 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \fsm_state$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$48 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$5 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                mac_in_rst = 1'h1;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:57" */
            default:
                mac_in_rst = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_rst = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$48 ) begin end
    \cnt$next  = cnt;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$7 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \cnt$next  = in_init;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          \cnt$next  = \$10 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \cnt$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$48 ) begin end
    \out_d_valid$next  = out_d_valid;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$12 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \out_d_valid$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$14 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \out_d_valid$next  = 1'h1;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d_valid$next  = 1'h0;
    endcase
  end
  assign \$9  = \$10 ;
  assign out_ovf = mac_out_ovf;
  assign out_d = mac_out_d;
  assign mac_in_b = in_b;
  assign mac_in_a = in_a;
endmodule

(* \amaranth.hierarchy  = "top.pe.U$$3" *)
(* generator = "Amaranth" *)
module \U$$3 (clk, in_a, in_b, out_d, in_init, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$49  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$10 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$12 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
  wire \$3 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$5 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *)
  wire [10:0] \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] cnt = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:15" *)
  reg [9:0] \cnt$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg fsm_state = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
  reg \fsm_state$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  input [9:0] in_init;
  wire [9:0] in_init;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  wire [7:0] mac_in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  reg mac_in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  wire [7:0] mac_in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  reg mac_in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  reg mac_in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  wire [31:0] mac_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  wire mac_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg out_d_valid = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:22" *)
  reg \out_d_valid$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:23" *)
  wire out_ovf;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:69" *) 1'h1;
  assign \$12  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$14  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$1  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$3  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *) 1'h1;
  assign \$5  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  assign \$7  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *) in_init;
  always @(posedge clk)
    out_d_valid <= \out_d_valid$next ;
  always @(posedge clk)
    cnt <= \cnt$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  \mac$3  mac (
    .clk(clk),
    .in_a(mac_in_a),
    .in_a_valid(mac_in_a_valid),
    .in_b(mac_in_b),
    .in_b_valid(mac_in_b_valid),
    .in_rst(mac_in_rst),
    .out_d(mac_out_d),
    .out_ovf(mac_out_ovf),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$49 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_a_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_a_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$49 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          mac_in_b_valid = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_b_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$49 ) begin end
    \fsm_state$next  = fsm_state;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$1 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \fsm_state$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$3 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \fsm_state$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$49 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$5 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                mac_in_rst = 1'h1;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:57" */
            default:
                mac_in_rst = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          mac_in_rst = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$49 ) begin end
    \cnt$next  = cnt;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$7 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \cnt$next  = in_init;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          \cnt$next  = \$10 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \cnt$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$49 ) begin end
    \out_d_valid$next  = out_d_valid;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:41" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:42" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" *)
          casez (\$12 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:47" */
            1'h1:
                \out_d_valid$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:62" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" *)
          casez (\$14 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:71" */
            1'h1:
                \out_d_valid$next  = 1'h1;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d_valid$next  = 1'h0;
    endcase
  end
  assign \$9  = \$10 ;
  assign out_ovf = mac_out_ovf;
  assign out_d = mac_out_d;
  assign mac_in_b = in_b;
  assign mac_in_a = in_a;
endmodule

(* \amaranth.hierarchy  = "top.pe.adder_tree" *)
(* generator = "Amaranth" *)
module adder_tree(out_ovf, in_data_4_0, in_valid_4_0, in_data_4_1, in_valid_4_1, in_data_4_2, in_valid_4_2, in_data_4_3, in_valid_4_3, out_d);
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:52" *)
  wire [32:0] \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *)
  wire \$11 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *)
  wire \$15 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:53" *)
  wire \$3 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *)
  wire \$5 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *)
  wire \$6 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:58" *)
  wire \$9 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:29" *)
  wire current_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_4_0;
  wire [31:0] in_data_4_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_4_1;
  wire [31:0] in_data_4_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_4_2;
  wire [31:0] in_data_4_2;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_4_3;
  wire [31:0] in_data_4_3;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire in_ovf_4_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire in_ovf_4_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire in_ovf_4_2;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire in_ovf_4_3;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_4_0;
  wire in_valid_4_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_4_1;
  wire in_valid_4_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_4_2;
  wire in_valid_4_2;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_4_3;
  wire in_valid_4_3;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:24" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:25" *)
  output out_ovf;
  wire out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:26" *)
  wire out_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] tree_l_in_data_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] tree_l_in_data_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire tree_l_in_ovf_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire tree_l_in_ovf_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  wire tree_l_in_valid_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  wire tree_l_in_valid_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:24" *)
  wire [31:0] tree_l_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:25" *)
  wire tree_l_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:26" *)
  wire tree_l_out_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] tree_r_in_data_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] tree_r_in_data_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire tree_r_in_ovf_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  wire tree_r_in_ovf_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  wire tree_r_in_valid_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  wire tree_r_in_valid_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:24" *)
  wire [31:0] tree_r_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:25" *)
  wire tree_r_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:26" *)
  wire tree_r_out_valid;
  assign \$9  = tree_l_out_d[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:58" *) out_d[31];
  assign \$11  = \$5  & (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *) \$9 ;
  assign \$13  = \$11  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *) tree_l_out_ovf;
  assign \$15  = \$13  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *) tree_r_out_ovf;
  assign \$1  = $signed(tree_l_out_d) + (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:52" *) $signed(tree_r_out_d);
  assign \$3  = tree_l_out_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:53" *) tree_r_out_valid;
  assign \$6  = tree_l_out_d[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *) tree_r_out_d[31];
  assign \$5  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:57" *) \$6 ;
  tree_l tree_l (
    .in_data_2_0(tree_l_in_data_2_0),
    .in_data_2_1(tree_l_in_data_2_1),
    .in_ovf_2_0(1'h0),
    .in_ovf_2_1(1'h0),
    .in_valid_2_0(tree_l_in_valid_2_0),
    .in_valid_2_1(tree_l_in_valid_2_1),
    .out_d(tree_l_out_d),
    .out_ovf(tree_l_out_ovf),
    .out_valid(tree_l_out_valid)
  );
  tree_r tree_r (
    .in_data_2_0(tree_r_in_data_2_0),
    .in_data_2_1(tree_r_in_data_2_1),
    .in_ovf_2_0(1'h0),
    .in_ovf_2_1(1'h0),
    .in_valid_2_0(tree_r_in_valid_2_0),
    .in_valid_2_1(tree_r_in_valid_2_1),
    .out_d(tree_r_out_d),
    .out_ovf(tree_r_out_ovf),
    .out_valid(tree_r_out_valid)
  );
  assign in_ovf_4_0 = 1'h0;
  assign in_ovf_4_2 = 1'h0;
  assign in_ovf_4_1 = 1'h0;
  assign in_ovf_4_3 = 1'h0;
  assign out_ovf = \$15 ;
  assign out_valid = \$3 ;
  assign { current_ovf, out_d } = \$1 ;
  assign tree_r_in_ovf_2_1 = 1'h0;
  assign tree_l_in_ovf_2_1 = 1'h0;
  assign tree_r_in_valid_2_1 = in_valid_4_3;
  assign tree_l_in_valid_2_1 = in_valid_4_1;
  assign tree_r_in_data_2_1 = in_data_4_3;
  assign tree_l_in_data_2_1 = in_data_4_1;
  assign tree_r_in_ovf_2_0 = 1'h0;
  assign tree_l_in_ovf_2_0 = 1'h0;
  assign tree_r_in_valid_2_0 = in_valid_4_2;
  assign tree_l_in_valid_2_0 = in_valid_4_0;
  assign tree_r_in_data_2_0 = in_data_4_2;
  assign tree_l_in_data_2_0 = in_data_4_0;
endmodule

(* \amaranth.hierarchy  = "top.pe.U$$0.mac" *)
(* generator = "Amaranth" *)
module mac(clk, in_a, in_b, out_d, out_ovf, in_a_valid, in_b_valid, in_rst, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$50  = 0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [31:0] \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$11 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *)
  wire \$17 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$19 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [15:0] \$2 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$21 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$23 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [15:0] \$5 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [32:0] \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:24" *)
  wire [31:0] current_out;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:25" *)
  wire current_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  input in_a_valid;
  wire in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  input in_b_valid;
  wire in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  input in_rst;
  wire in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:23" *)
  wire [31:0] mult;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  output [31:0] out_d;
  reg [31:0] out_d = 32'd0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  reg [31:0] \out_d$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:20" *)
  reg out_d_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  output out_ovf;
  reg out_ovf = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  reg \out_ovf$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$11  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$14  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_d[31];
  assign \$13  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$14 ;
  assign \$17  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *) current_out[31];
  assign \$19  = \$13  & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$17 ;
  assign \$21  = \$19  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_ovf;
  assign \$23  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$2  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(in_b);
  assign \$1  = + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(\$2 );
  assign \$5  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(in_b);
  assign \$7  = $signed(\$5 ) + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(out_d);
  always @(posedge clk)
    out_ovf <= \out_ovf$next ;
  always @(posedge clk)
    out_d <= \out_d$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$50 ) begin end
    \out_d$next  = out_d;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$9 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_d$next  = 32'd0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_d$next  = current_out;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$50 ) begin end
    \out_ovf$next  = out_ovf;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$11 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_ovf$next  = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_ovf$next  = \$21 ;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$50 ) begin end
    out_d_valid = 1'h0;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$23 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          out_d_valid = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          out_d_valid = 1'h1;
    endcase
  end
  assign { current_out_ovf, current_out } = \$7 ;
  assign mult = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pe.U$$1.mac" *)
(* generator = "Amaranth" *)
module \mac$1 (clk, in_a, in_b, out_d, out_ovf, in_a_valid, in_b_valid, in_rst, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$51  = 0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [31:0] \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$11 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *)
  wire \$17 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$19 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [15:0] \$2 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$21 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$23 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [15:0] \$5 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [32:0] \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:24" *)
  wire [31:0] current_out;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:25" *)
  wire current_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  input in_a_valid;
  wire in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  input in_b_valid;
  wire in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  input in_rst;
  wire in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:23" *)
  wire [31:0] mult;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  output [31:0] out_d;
  reg [31:0] out_d = 32'd0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  reg [31:0] \out_d$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:20" *)
  reg out_d_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  output out_ovf;
  reg out_ovf = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  reg \out_ovf$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$11  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$14  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_d[31];
  assign \$13  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$14 ;
  assign \$17  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *) current_out[31];
  assign \$19  = \$13  & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$17 ;
  assign \$21  = \$19  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_ovf;
  assign \$23  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$2  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(in_b);
  assign \$1  = + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(\$2 );
  assign \$5  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(in_b);
  assign \$7  = $signed(\$5 ) + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(out_d);
  always @(posedge clk)
    out_ovf <= \out_ovf$next ;
  always @(posedge clk)
    out_d <= \out_d$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$51 ) begin end
    \out_d$next  = out_d;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$9 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_d$next  = 32'd0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_d$next  = current_out;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$51 ) begin end
    \out_ovf$next  = out_ovf;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$11 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_ovf$next  = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_ovf$next  = \$21 ;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$51 ) begin end
    out_d_valid = 1'h0;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$23 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          out_d_valid = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          out_d_valid = 1'h1;
    endcase
  end
  assign { current_out_ovf, current_out } = \$7 ;
  assign mult = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pe.U$$2.mac" *)
(* generator = "Amaranth" *)
module \mac$2 (clk, in_a, in_b, out_d, out_ovf, in_a_valid, in_b_valid, in_rst, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$52  = 0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [31:0] \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$11 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *)
  wire \$17 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$19 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [15:0] \$2 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$21 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$23 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [15:0] \$5 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [32:0] \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:24" *)
  wire [31:0] current_out;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:25" *)
  wire current_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  input in_a_valid;
  wire in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  input in_b_valid;
  wire in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  input in_rst;
  wire in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:23" *)
  wire [31:0] mult;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  output [31:0] out_d;
  reg [31:0] out_d = 32'd0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  reg [31:0] \out_d$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:20" *)
  reg out_d_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  output out_ovf;
  reg out_ovf = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  reg \out_ovf$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$11  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$14  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_d[31];
  assign \$13  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$14 ;
  assign \$17  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *) current_out[31];
  assign \$19  = \$13  & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$17 ;
  assign \$21  = \$19  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_ovf;
  assign \$23  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$2  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(in_b);
  assign \$1  = + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(\$2 );
  assign \$5  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(in_b);
  assign \$7  = $signed(\$5 ) + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(out_d);
  always @(posedge clk)
    out_ovf <= \out_ovf$next ;
  always @(posedge clk)
    out_d <= \out_d$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$52 ) begin end
    \out_d$next  = out_d;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$9 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_d$next  = 32'd0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_d$next  = current_out;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$52 ) begin end
    \out_ovf$next  = out_ovf;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$11 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_ovf$next  = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_ovf$next  = \$21 ;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$52 ) begin end
    out_d_valid = 1'h0;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$23 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          out_d_valid = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          out_d_valid = 1'h1;
    endcase
  end
  assign { current_out_ovf, current_out } = \$7 ;
  assign mult = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pe.U$$3.mac" *)
(* generator = "Amaranth" *)
module \mac$3 (clk, in_a, in_b, out_d, out_ovf, in_a_valid, in_b_valid, in_rst, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$53  = 0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [31:0] \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$11 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *)
  wire \$17 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$19 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *)
  wire [15:0] \$2 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *)
  wire \$21 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$23 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [15:0] \$5 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *)
  wire [32:0] \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *)
  wire \$9 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:24" *)
  wire [31:0] current_out;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:25" *)
  wire current_out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:12" *)
  input [7:0] in_a;
  wire [7:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:13" *)
  input in_a_valid;
  wire in_a_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:14" *)
  input [7:0] in_b;
  wire [7:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:15" *)
  input in_b_valid;
  wire in_b_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:17" *)
  input in_rst;
  wire in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:23" *)
  wire [31:0] mult;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  output [31:0] out_d;
  reg [31:0] out_d = 32'd0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:19" *)
  reg [31:0] \out_d$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:20" *)
  reg out_d_valid;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  output out_ovf;
  reg out_ovf = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:21" *)
  reg \out_ovf$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$11  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$14  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_d[31];
  assign \$13  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$14 ;
  assign \$17  = mult[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:53" *) current_out[31];
  assign \$19  = \$13  & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) \$17 ;
  assign \$21  = \$19  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:52" *) out_ovf;
  assign \$23  = in_a_valid & (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" *) in_b_valid;
  assign \$2  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(in_b);
  assign \$1  = + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:30" *) $signed(\$2 );
  assign \$5  = $signed(in_a) * (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(in_b);
  assign \$7  = $signed(\$5 ) + (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:32" *) $signed(out_d);
  always @(posedge clk)
    out_ovf <= \out_ovf$next ;
  always @(posedge clk)
    out_d <= \out_d$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$53 ) begin end
    \out_d$next  = out_d;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$9 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_d$next  = 32'd0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_d$next  = current_out;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_d$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$53 ) begin end
    \out_ovf$next  = out_ovf;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$11 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          \out_ovf$next  = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          \out_ovf$next  = \$21 ;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:334" *)
    casez (in_rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_ovf$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$53 ) begin end
    out_d_valid = 1'h0;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" *)
    casez ({ \$23 , in_rst })
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:35" */
      2'b?1:
          out_d_valid = 1'h0;
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/mac.py:43" */
      2'b1?:
          out_d_valid = 1'h1;
    endcase
  end
  assign { current_out_ovf, current_out } = \$7 ;
  assign mult = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pe" *)
(* generator = "Amaranth" *)
module pe(in_b, out_d, rst, clk, in_a);
  reg \$auto$verilog_backend.cc:2083:dump_module$54  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$10 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$15 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$16 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$19 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$21 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$22 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$25 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$27 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$28 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$3 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$30 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$32 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$34 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$36 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$38 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$40 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$42 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$44 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$46 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$48 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$5 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$50 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$52 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$54 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$56 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$58 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
  wire \$60 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$62 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/dsl.py:437" *)
  wire \$7 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *)
  wire [10:0] \$9 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  wire [7:0] \U$$0_in_a ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  wire [7:0] \U$$0_in_b ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  reg [9:0] \U$$0_in_init ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  wire [31:0] \U$$0_out_d ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  wire [7:0] \U$$1_in_a ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  wire [7:0] \U$$1_in_b ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  reg [9:0] \U$$1_in_init ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  wire [31:0] \U$$1_out_d ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  wire [7:0] \U$$2_in_a ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  wire [7:0] \U$$2_in_b ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  reg [9:0] \U$$2_in_init ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  wire [31:0] \U$$2_out_d ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:18" *)
  wire [7:0] \U$$3_in_a ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:19" *)
  wire [7:0] \U$$3_in_b ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:14" *)
  reg [9:0] \U$$3_in_init ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe.py:21" *)
  wire [31:0] \U$$3_out_d ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] adder_tree_in_data_4_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] adder_tree_in_data_4_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] adder_tree_in_data_4_2;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  wire [31:0] adder_tree_in_data_4_3;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  reg adder_tree_in_valid_4_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  reg adder_tree_in_valid_4_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  reg adder_tree_in_valid_4_2;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  reg adder_tree_in_valid_4_3;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:24" *)
  wire [31:0] adder_tree_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:25" *)
  wire adder_tree_out_ovf;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:39" *)
  reg [9:0] cnt = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:39" *)
  reg [9:0] \cnt$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg fsm_state = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg \fsm_state$12  = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg \fsm_state$12$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg \fsm_state$18  = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg \fsm_state$18$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg \fsm_state$24  = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg \fsm_state$24$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
  reg \fsm_state$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:41" *)
  input [31:0] in_a;
  wire [31:0] in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:42" *)
  input [31:0] in_b;
  wire [31:0] in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:38" *)
  wire [9:0] in_init;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:45" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:47" *)
  wire out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:46" *)
  reg out_ready = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:46" *)
  reg \out_ready$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *) 1'h1;
  assign \$16  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *) 1'h1;
  assign \$22  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *) 1'h1;
  assign \$28  = cnt - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:87" *) 1'h1;
  assign \$32  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  assign \$36  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  assign \$3  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  assign \$40  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  assign \$44  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  assign \$48  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  assign \$54  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  assign \$60  = cnt == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *) 1'h1;
  always @(posedge clk)
    \fsm_state$24  <= \fsm_state$24$next ;
  always @(posedge clk)
    \fsm_state$18  <= \fsm_state$18$next ;
  always @(posedge clk)
    \fsm_state$12  <= \fsm_state$12$next ;
  always @(posedge clk)
    out_ready <= \out_ready$next ;
  always @(posedge clk)
    cnt <= \cnt$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  \U$$0  \U$$0  (
    .clk(clk),
    .in_a(\U$$0_in_a ),
    .in_b(\U$$0_in_b ),
    .in_init(\U$$0_in_init ),
    .out_d(\U$$0_out_d ),
    .rst(rst)
  );
  \U$$1  \U$$1  (
    .clk(clk),
    .in_a(\U$$1_in_a ),
    .in_b(\U$$1_in_b ),
    .in_init(\U$$1_in_init ),
    .out_d(\U$$1_out_d ),
    .rst(rst)
  );
  \U$$2  \U$$2  (
    .clk(clk),
    .in_a(\U$$2_in_a ),
    .in_b(\U$$2_in_b ),
    .in_init(\U$$2_in_init ),
    .out_d(\U$$2_out_d ),
    .rst(rst)
  );
  \U$$3  \U$$3  (
    .clk(clk),
    .in_a(\U$$3_in_a ),
    .in_b(\U$$3_in_b ),
    .in_init(\U$$3_in_init ),
    .out_d(\U$$3_out_d ),
    .rst(rst)
  );
  adder_tree adder_tree (
    .in_data_4_0(adder_tree_in_data_4_0),
    .in_data_4_1(adder_tree_in_data_4_1),
    .in_data_4_2(adder_tree_in_data_4_2),
    .in_data_4_3(adder_tree_in_data_4_3),
    .in_valid_4_0(adder_tree_in_valid_4_0),
    .in_valid_4_1(adder_tree_in_valid_4_1),
    .in_valid_4_2(adder_tree_in_valid_4_2),
    .in_valid_4_3(adder_tree_in_valid_4_3),
    .out_d(adder_tree_out_d),
    .out_ovf(adder_tree_out_ovf)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$12 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          adder_tree_in_valid_4_1 = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          adder_tree_in_valid_4_1 = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \fsm_state$12$next  = \fsm_state$12 ;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$12 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$46 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \fsm_state$12$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$48 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \fsm_state$12$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$12$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \U$$1_in_init  = 10'h000;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$12 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$50 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \U$$1_in_init  = 10'h000;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$18 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          adder_tree_in_valid_4_2 = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          adder_tree_in_valid_4_2 = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \fsm_state$18$next  = \fsm_state$18 ;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$18 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$52 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \fsm_state$18$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$54 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \fsm_state$18$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$18$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \U$$2_in_init  = 10'h000;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$18 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$56 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \U$$2_in_init  = 10'h000;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$24 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          adder_tree_in_valid_4_3 = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          adder_tree_in_valid_4_3 = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \fsm_state$24$next  = \fsm_state$24 ;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$24 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$58 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \fsm_state$24$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$60 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \fsm_state$24$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$24$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \U$$3_in_init  = 10'h000;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$24 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$62 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \U$$3_in_init  = 10'h000;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          adder_tree_in_valid_4_0 = 1'h0;
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          adder_tree_in_valid_4_0 = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \fsm_state$next  = fsm_state;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$1 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \fsm_state$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$3 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \fsm_state$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \U$$0_in_init  = 10'h000;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$5 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \U$$0_in_init  = 10'h000;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \cnt$next  = cnt;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$7 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \cnt$next  = 10'h000;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          \cnt$next  = \$10 [9:0];
    endcase
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$12 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$13 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \cnt$next  = 10'h000;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          \cnt$next  = \$16 [9:0];
    endcase
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$18 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$19 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \cnt$next  = 10'h000;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          \cnt$next  = \$22 [9:0];
    endcase
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$24 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$25 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \cnt$next  = 10'h000;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          \cnt$next  = \$28 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \cnt$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$54 ) begin end
    \out_ready$next  = out_ready;
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$30 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \out_ready$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$32 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \out_ready$next  = 1'h1;
          endcase
    endcase
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$12 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$34 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \out_ready$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$36 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \out_ready$next  = 1'h1;
          endcase
    endcase
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$18 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$38 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \out_ready$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$40 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \out_ready$next  = 1'h1;
          endcase
    endcase
    (* full_case = 32'd1 *)
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:68" *)
    casez (\fsm_state$24 )
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:69" */
      1'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" *)
          casez (\$42 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:73" */
            1'h1:
                \out_ready$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "EXEC/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:82" */
      1'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" *)
          casez (\$44 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:89" */
            1'h1:
                \out_ready$next  = 1'h1;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \out_ready$next  = 1'h0;
    endcase
  end
  assign \$9  = \$10 ;
  assign \$15  = \$16 ;
  assign \$21  = \$22 ;
  assign \$27  = \$28 ;
  assign in_init = 10'h000;
  assign adder_tree_in_data_4_3 = \U$$3_out_d ;
  assign \U$$3_in_b  = in_b[31:24];
  assign \U$$3_in_a  = in_a[31:24];
  assign adder_tree_in_data_4_2 = \U$$2_out_d ;
  assign \U$$2_in_b  = in_b[23:16];
  assign \U$$2_in_a  = in_a[23:16];
  assign adder_tree_in_data_4_1 = \U$$1_out_d ;
  assign \U$$1_in_b  = in_b[15:8];
  assign \U$$1_in_a  = in_a[15:8];
  assign adder_tree_in_data_4_0 = \U$$0_out_d ;
  assign \U$$0_in_b  = in_b[7:0];
  assign \U$$0_in_a  = in_a[7:0];
  assign out_ovf = adder_tree_out_ovf;
  assign out_d = adder_tree_out_d;
  assign \$1  = 1'h0;
  assign \$5  = 1'h0;
  assign \$7  = 1'h0;
  assign \$13  = 1'h0;
  assign \$19  = 1'h0;
  assign \$25  = 1'h0;
  assign \$30  = 1'h0;
  assign \$34  = 1'h0;
  assign \$38  = 1'h0;
  assign \$42  = 1'h0;
  assign \$46  = 1'h0;
  assign \$50  = 1'h0;
  assign \$52  = 1'h0;
  assign \$56  = 1'h0;
  assign \$58  = 1'h0;
  assign \$62  = 1'h0;
endmodule

(* \amaranth.hierarchy  = "top.pipe_a" *)
(* generator = "Amaranth" *)
module pipe_a(r_data, r_en, rst, clk, w_data);
  reg \$auto$verilog_backend.cc:2083:dump_module$55  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *)
  wire \$1 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *)
  wire \$3 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *)
  wire \$5 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:258" *)
  wire [11:0] \$7 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:258" *)
  wire [11:0] \$8 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:226" *)
  wire [10:0] level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  input r_en;
  wire r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:86" *)
  wire [10:0] r_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  reg r_rdy = 1'h0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  reg \r_rdy$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:122" *)
  wire [10:0] unbuffered_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  wire [31:0] unbuffered_r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  wire unbuffered_r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  wire unbuffered_r_rdy;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  wire [31:0] unbuffered_w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:80" *)
  wire unbuffered_w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:79" *)
  wire unbuffered_w_rdy;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:80" *)
  wire w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:81" *)
  wire [10:0] w_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:79" *)
  wire w_rdy;
  assign \$1  = ~ (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *) r_rdy;
  assign \$3  = \$1  | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *) r_en;
  assign \$5  = unbuffered_r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *) \$3 ;
  assign \$8  = unbuffered_level + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:258" *) r_rdy;
  always @(posedge clk)
    r_rdy <= \r_rdy$next ;
  unbuffered unbuffered (
    .clk(clk),
    .level(unbuffered_level),
    .r_data(unbuffered_r_data),
    .r_en(unbuffered_r_en),
    .r_rdy(unbuffered_r_rdy),
    .rst(rst),
    .w_data(unbuffered_w_data),
    .w_en(1'h0),
    .w_rdy(unbuffered_w_rdy)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$55 ) begin end
    \r_rdy$next  = r_rdy;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:252" *)
    casez ({ r_en, unbuffered_r_en })
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:252" */
      2'b?1:
          \r_rdy$next  = 1'h1;
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:254" */
      2'b1?:
          \r_rdy$next  = 1'h0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_rdy$next  = 1'h0;
    endcase
  end
  assign \$7  = \$8 ;
  assign w_en = 1'h0;
  assign r_level = level;
  assign w_level = level;
  assign level = \$8 [10:0];
  assign unbuffered_r_en = \$5 ;
  assign r_data = unbuffered_r_data;
  assign w_rdy = unbuffered_w_rdy;
  assign unbuffered_w_en = 1'h0;
  assign unbuffered_w_data = w_data;
endmodule

(* \amaranth.hierarchy  = "top.pipe_b" *)
(* generator = "Amaranth" *)
module pipe_b(r_data, r_en, r_rdy, rst, clk, w_data);
  reg \$auto$verilog_backend.cc:2083:dump_module$56  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *)
  wire \$1 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *)
  wire \$3 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *)
  wire \$5 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:258" *)
  wire [11:0] \$7 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:258" *)
  wire [11:0] \$8 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:226" *)
  wire [10:0] level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  input r_en;
  wire r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:86" *)
  wire [10:0] r_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  reg r_rdy = 1'h0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  reg \r_rdy$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:122" *)
  wire [10:0] unbuffered_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  wire [31:0] unbuffered_r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  wire unbuffered_r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  wire unbuffered_r_rdy;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  wire [31:0] unbuffered_w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:80" *)
  wire unbuffered_w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:79" *)
  wire unbuffered_w_rdy;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:80" *)
  wire w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:81" *)
  wire [10:0] w_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:79" *)
  wire w_rdy;
  assign \$1  = ~ (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *) r_rdy;
  assign \$3  = \$1  | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *) r_en;
  assign \$5  = unbuffered_r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:250" *) \$3 ;
  assign \$8  = unbuffered_level + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:258" *) r_rdy;
  always @(posedge clk)
    r_rdy <= \r_rdy$next ;
  \unbuffered$4  unbuffered (
    .clk(clk),
    .level(unbuffered_level),
    .r_data(unbuffered_r_data),
    .r_en(unbuffered_r_en),
    .r_rdy(unbuffered_r_rdy),
    .rst(rst),
    .w_data(unbuffered_w_data),
    .w_en(1'h0),
    .w_rdy(unbuffered_w_rdy)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$56 ) begin end
    \r_rdy$next  = r_rdy;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:252" *)
    casez ({ r_en, unbuffered_r_en })
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:252" */
      2'b?1:
          \r_rdy$next  = 1'h1;
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:254" */
      2'b1?:
          \r_rdy$next  = 1'h0;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_rdy$next  = 1'h0;
    endcase
  end
  assign \$7  = \$8 ;
  assign w_en = 1'h0;
  assign r_level = level;
  assign w_level = level;
  assign level = \$8 [10:0];
  assign unbuffered_r_en = \$5 ;
  assign r_data = unbuffered_r_data;
  assign w_rdy = unbuffered_w_rdy;
  assign unbuffered_w_en = 1'h0;
  assign unbuffered_w_data = w_data;
endmodule

(* \amaranth.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "Amaranth" *)
module top(out_r_addr, out_w_addr, out_w_en, out_w_data, clk, rst, in_r_data);
  reg \$auto$verilog_backend.cc:2083:dump_module$57  = 0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:183" *)
  wire [31:0] \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire [10:0] \$10 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire \$12 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" *)
  wire \$14 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:209" *)
  wire [10:0] \$16 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:209" *)
  wire [9:0] \$17 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:210" *)
  wire [8:0] \$20 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire [10:0] \$22 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire \$24 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" *)
  wire \$26 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire [10:0] \$28 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire \$30 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire [10:0] \$32 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
  wire \$34 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:190" *)
  wire [10:0] \$4 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" *)
  wire \$6 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" *)
  wire \$8 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:133" *)
  reg [9:0] addr_io = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:133" *)
  reg [9:0] \addr_io$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:134" *)
  reg addr_io_ovf = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:134" *)
  reg \addr_io_ovf$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:171" *)
  reg cnt_fetch = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:171" *)
  reg \cnt_fetch$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:157" *)
  reg [9:0] fan_cnt = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:157" *)
  reg [9:0] \fan_cnt$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:159" *)
  wire [10:0] fan_cnt_next;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:158" *)
  reg fan_cnt_ovf = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:158" *)
  reg \fan_cnt_ovf$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:156" *)
  reg [9:0] fan_in = 10'h000;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:156" *)
  reg [9:0] \fan_in$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
  reg [2:0] \fsm_state$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:126" *)
  input [31:0] in_r_data;
  wire [31:0] in_r_data;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:37" *)
  wire in_rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:123" *)
  wire \in_rst$3 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:146" *)
  reg [7:0] next_pc = 8'h01;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:146" *)
  reg [7:0] \next_pc$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:147" *)
  reg next_pc_ovf = 1'h0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:147" *)
  reg \next_pc_ovf$next ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:149" *)
  wire [3:0] opcode;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:127" *)
  output [9:0] out_r_addr;
  wire [9:0] out_r_addr;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:130" *)
  output [9:0] out_w_addr;
  wire [9:0] out_w_addr;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:129" *)
  input [31:0] out_w_data;
  wire [31:0] out_w_data;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:128" *)
  input out_w_en;
  wire out_w_en;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:41" *)
  wire [31:0] pe_in_a;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:42" *)
  wire [31:0] pe_in_b;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_stack.py:45" *)
  wire [31:0] pe_out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:168" *)
  wire [31:0] pe_ptr;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  wire [31:0] pipe_a_r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  reg pipe_a_r_en = 1'h0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  reg \pipe_a_r_en$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  wire [31:0] pipe_a_w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  wire [31:0] pipe_b_r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  reg pipe_b_r_en = 1'h0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  reg \pipe_b_r_en$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  wire pipe_b_r_rdy;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  wire [31:0] pipe_b_w_data;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:161" *)
  wire reuse_b;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:150" *)
  wire [3:0] v1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:151" *)
  wire [23:0] v2;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:153" *)
  wire [9:0] v2_f;
  assign \$10  = fan_in - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) 1'h1;
  assign \$12  = fan_cnt < (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) \$10 ;
  assign \$14  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" *) pipe_b_r_rdy;
  assign \$17  = in_r_data[8:0] + (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:209" *) 1'h1;
  assign \$16  = + (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:209" *) \$17 ;
  assign \$20  = next_pc + (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:210" *) 1'h1;
  assign \$22  = fan_in - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) 1'h1;
  assign \$24  = fan_cnt < (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) \$22 ;
  assign \$26  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" *) pipe_b_r_rdy;
  assign \$28  = fan_in - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) 1'h1;
  assign \$30  = fan_cnt < (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) \$28 ;
  assign \$32  = fan_in - (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) 1'h1;
  assign \$34  = fan_cnt < (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *) \$32 ;
  assign \$4  = fan_cnt + (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:190" *) 1'h1;
  assign \$6  = in_r_data == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" *) 32'd3405643776;
  assign \$8  = in_r_data == (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" *) 32'd3405643776;
  always @(posedge clk)
    pipe_a_r_en <= \pipe_a_r_en$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  always @(posedge clk)
    cnt_fetch <= \cnt_fetch$next ;
  always @(posedge clk)
    fan_cnt <= \fan_cnt$next ;
  always @(posedge clk)
    fan_cnt_ovf <= \fan_cnt_ovf$next ;
  always @(posedge clk)
    fan_in <= \fan_in$next ;
  always @(posedge clk)
    pipe_b_r_en <= \pipe_b_r_en$next ;
  always @(posedge clk)
    next_pc <= \next_pc$next ;
  always @(posedge clk)
    next_pc_ovf <= \next_pc_ovf$next ;
  always @(posedge clk)
    addr_io <= \addr_io$next ;
  always @(posedge clk)
    addr_io_ovf <= \addr_io_ovf$next ;
  pe pe (
    .clk(clk),
    .in_a(pe_in_a),
    .in_b(pe_in_b),
    .out_d(pe_out_d),
    .rst(rst)
  );
  pipe_a pipe_a (
    .clk(clk),
    .r_data(pipe_a_r_data),
    .r_en(pipe_a_r_en),
    .rst(rst),
    .w_data(pipe_a_w_data)
  );
  pipe_b pipe_b (
    .clk(clk),
    .r_data(pipe_b_r_data),
    .r_en(pipe_b_r_en),
    .r_rdy(pipe_b_r_rdy),
    .rst(rst),
    .w_data(pipe_b_w_data)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \cnt_fetch$next  = cnt_fetch;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" *)
          casez (\$6 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" */
            1'h1:
                \cnt_fetch$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" *)
          casez (cnt_fetch)
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" */
            1'h1:
                \cnt_fetch$next  = 1'h0;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:213" */
            default:
                \cnt_fetch$next  = 1'h1;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \cnt_fetch$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \fsm_state$next  = fsm_state;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" *)
          casez (\$8 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:199" */
            1'h1:
                \fsm_state$next  = 3'h1;
          endcase
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" *)
          casez (cnt_fetch)
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" */
            1'h1:
                \fsm_state$next  = 3'h2;
          endcase
      /* \amaranth.decoding  = "DECODE/2" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:217" */
      3'h2:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:218" *)
          casez (opcode)
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:219" */
            4'h0:
                \fsm_state$next  = 3'h3;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:225" */
            4'h1:
                \fsm_state$next  = 3'h4;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:243" */
            4'h2:
                \fsm_state$next  = 3'h5;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:250" */
            4'h3:
                \fsm_state$next  = 3'h6;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:256" */
            4'h4:
                \fsm_state$next  = 3'h1;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:264" */
            default:
                \fsm_state$next  = 3'h0;
          endcase
      /* \amaranth.decoding  = "LOAD/3" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:267" */
      3'h3:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
          casez (\$12 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" */
            1'h1:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:283" */
            default:
                \fsm_state$next  = 3'h1;
          endcase
      /* \amaranth.decoding  = "EXEC/4" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:299" */
      3'h4:
          /* empty */;
      /* \amaranth.decoding  = "STORE/5" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:302" */
      3'h5:
          \fsm_state$next  = 3'h1;
      /* \amaranth.decoding  = "FLUSH/6" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:305" */
      3'h6:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" *)
          casez (\$14 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" */
            1'h1:
                \fsm_state$next  = 3'h1;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$next  = 3'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \addr_io$next  = addr_io;
    \addr_io_ovf$next  = addr_io_ovf;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" *)
          casez (cnt_fetch)
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" */
            1'h1:
                { \addr_io_ovf$next , \addr_io$next  } = \$16 ;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
        begin
          \addr_io$next  = 10'h000;
          \addr_io_ovf$next  = 1'h0;
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \next_pc$next  = next_pc;
    \next_pc_ovf$next  = next_pc_ovf;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" *)
          casez (cnt_fetch)
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:206" */
            1'h1:
                { \next_pc_ovf$next , \next_pc$next  } = \$20 ;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
        begin
          \next_pc$next  = 8'h01;
          \next_pc_ovf$next  = 1'h0;
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \pipe_b_r_en$next  = pipe_b_r_en;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "DECODE/2" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:217" */
      3'h2:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:218" *)
          casez (opcode)
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:219" */
            4'h0:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:225" */
            4'h1:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:243" */
            4'h2:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:250" */
            4'h3:
                \pipe_b_r_en$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "LOAD/3" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:267" */
      3'h3:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
          casez (\$24 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:274" *)
                casez (v1)
                  /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:275" */
                  4'h0:
                      /* empty */;
                  /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:279" */
                  default:
                      \pipe_b_r_en$next  = 1'h1;
                endcase
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:283" */
            default:
                (* full_case = 32'd1 *)
                (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:284" *)
                casez (v1)
                  /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:285" */
                  4'h0:
                      /* empty */;
                  /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:289" */
                  default:
                      \pipe_b_r_en$next  = 1'h0;
                endcase
          endcase
      /* \amaranth.decoding  = "EXEC/4" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:299" */
      3'h4:
          /* empty */;
      /* \amaranth.decoding  = "STORE/5" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:302" */
      3'h5:
          /* empty */;
      /* \amaranth.decoding  = "FLUSH/6" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:305" */
      3'h6:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" *)
          casez (\$26 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:306" */
            1'h1:
                \pipe_b_r_en$next  = 1'h0;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \pipe_b_r_en$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \fan_in$next  = fan_in;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "DECODE/2" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:217" */
      3'h2:
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:218" *)
          casez (opcode)
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:219" */
            4'h0:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:225" */
            4'h1:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:243" */
            4'h2:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:250" */
            4'h3:
                /* empty */;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:256" */
            4'h4:
                \fan_in$next  = v2_f;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fan_in$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \fan_cnt$next  = fan_cnt;
    \fan_cnt_ovf$next  = fan_cnt_ovf;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "DECODE/2" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:217" */
      3'h2:
          /* empty */;
      /* \amaranth.decoding  = "LOAD/3" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:267" */
      3'h3:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
          casez (\$30 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" */
            1'h1:
                { \fan_cnt_ovf$next , \fan_cnt$next  } = fan_cnt_next;
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:283" */
            default:
                \fan_cnt$next  = 10'h000;
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
        begin
          \fan_cnt$next  = 10'h000;
          \fan_cnt_ovf$next  = 1'h0;
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$57 ) begin end
    \pipe_a_r_en$next  = pipe_a_r_en;
    (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:196" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "INIT/0" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:197" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "FETCH/1" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:204" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "DECODE/2" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:217" */
      3'h2:
          /* empty */;
      /* \amaranth.decoding  = "LOAD/3" */
      /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:267" */
      3'h3:
          (* full_case = 32'd1 *)
          (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" *)
          casez (\$34 )
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:270" */
            1'h1:
                (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:274" *)
                casez (v1)
                  /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:275" */
                  4'h0:
                      \pipe_a_r_en$next  = 1'h1;
                endcase
            /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:283" */
            default:
                (* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:284" *)
                casez (v1)
                  /* src = "/data/Github/SNUHSD2023Spring/Lab5/pe_controller.py:285" */
                  4'h0:
                      \pipe_a_r_en$next  = 1'h0;
                endcase
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \pipe_a_r_en$next  = 1'h0;
    endcase
  end
  assign reuse_b = 1'h0;
  assign \in_rst$3  = 1'h0;
  assign v2_f = v2[9:0];
  assign pe_ptr = pe_out_d;
  assign fan_cnt_next = \$4 ;
  assign { opcode, v1, v2 } = in_r_data;
  assign out_w_addr = addr_io;
  assign out_r_addr = addr_io;
  assign pe_in_b = pipe_b_r_data;
  assign pe_in_a = pipe_a_r_data;
  assign in_rst = 1'h0;
  assign pipe_b_w_data = \$1 ;
  assign pipe_a_w_data = in_r_data;
  assign \$1  = in_r_data;
endmodule

(* \amaranth.hierarchy  = "top.pe.adder_tree.tree_l" *)
(* generator = "Amaranth" *)
module tree_l(in_valid_2_0, in_ovf_2_0, in_data_2_1, in_valid_2_1, in_ovf_2_1, out_d, out_valid, out_ovf, in_data_2_0);
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:67" *)
  wire \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$11 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$15 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:68" *)
  wire [32:0] \$3 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$5 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$6 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:73" *)
  wire \$9 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:29" *)
  wire current_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_2_0;
  wire [31:0] in_data_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_2_1;
  wire [31:0] in_data_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  input in_ovf_2_0;
  wire in_ovf_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  input in_ovf_2_1;
  wire in_ovf_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_2_0;
  wire in_valid_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_2_1;
  wire in_valid_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:24" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:25" *)
  output out_ovf;
  wire out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:26" *)
  output out_valid;
  wire out_valid;
  assign \$9  = in_data_2_0[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:73" *) out_d[31];
  assign \$11  = \$5  & (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) \$9 ;
  assign \$13  = \$11  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) in_ovf_2_0;
  assign \$15  = \$13  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) in_ovf_2_1;
  assign \$1  = in_valid_2_0 & (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:67" *) in_valid_2_1;
  assign \$3  = $signed(in_data_2_0) + (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:68" *) $signed(in_data_2_1);
  assign \$6  = in_data_2_0[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) in_data_2_1[31];
  assign \$5  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) \$6 ;
  assign out_ovf = \$15 ;
  assign { current_ovf, out_d } = \$3 ;
  assign out_valid = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pe.adder_tree.tree_r" *)
(* generator = "Amaranth" *)
module tree_r(in_valid_2_0, in_ovf_2_0, in_data_2_1, in_valid_2_1, in_ovf_2_1, out_d, out_valid, out_ovf, in_data_2_0);
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:67" *)
  wire \$1 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$11 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$13 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$15 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:68" *)
  wire [32:0] \$3 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$5 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *)
  wire \$6 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:73" *)
  wire \$9 ;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:29" *)
  wire current_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_2_0;
  wire [31:0] in_data_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:18" *)
  input [31:0] in_data_2_1;
  wire [31:0] in_data_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  input in_ovf_2_0;
  wire in_ovf_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:20" *)
  input in_ovf_2_1;
  wire in_ovf_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_2_0;
  wire in_valid_2_0;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:22" *)
  input in_valid_2_1;
  wire in_valid_2_1;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:24" *)
  output [31:0] out_d;
  wire [31:0] out_d;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:25" *)
  output out_ovf;
  wire out_ovf;
  (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:26" *)
  output out_valid;
  wire out_valid;
  assign \$9  = in_data_2_0[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:73" *) out_d[31];
  assign \$11  = \$5  & (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) \$9 ;
  assign \$13  = \$11  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) in_ovf_2_0;
  assign \$15  = \$13  | (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) in_ovf_2_1;
  assign \$1  = in_valid_2_0 & (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:67" *) in_valid_2_1;
  assign \$3  = $signed(in_data_2_0) + (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:68" *) $signed(in_data_2_1);
  assign \$6  = in_data_2_0[31] ^ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) in_data_2_1[31];
  assign \$5  = ~ (* src = "/data/Github/SNUHSD2023Spring/Lab5/adder_tree.py:72" *) \$6 ;
  assign out_ovf = \$15 ;
  assign { current_ovf, out_d } = \$3 ;
  assign out_valid = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pipe_a.unbuffered" *)
(* generator = "Amaranth" *)
module unbuffered(clk, w_data, w_en, w_rdy, r_data, r_en, r_rdy, level, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$58  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$10 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$11 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *)
  wire \$13 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$15 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$16 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *)
  wire \$18 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:134" *)
  wire \$2 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *)
  wire \$20 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *)
  wire \$21 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *)
  wire \$24 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:168" *)
  wire [11:0] \$26 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:168" *)
  wire [11:0] \$27 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *)
  wire \$29 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *)
  wire \$31 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *)
  wire \$32 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *)
  wire \$35 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:170" *)
  wire [11:0] \$37 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:170" *)
  wire [11:0] \$38 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:135" *)
  wire \$4 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:153" *)
  wire \$6 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *)
  wire \$8 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:148" *)
  reg [9:0] consume = 10'h000;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:148" *)
  reg [9:0] \consume$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:122" *)
  output [10:0] level;
  reg [10:0] level = 11'h000;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:122" *)
  reg [10:0] \level$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:147" *)
  reg [9:0] produce = 10'h000;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:147" *)
  reg [9:0] \produce$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  input r_en;
  wire r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:86" *)
  wire [10:0] r_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  wire r_rdy;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:145" *)
  wire [9:0] storage_r_addr;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:145" *)
  wire [31:0] storage_r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:145" *)
  wire storage_r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:144" *)
  wire [9:0] storage_w_addr;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:144" *)
  wire [31:0] storage_w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:144" *)
  wire storage_w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:80" *)
  input w_en;
  wire w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:81" *)
  wire [10:0] w_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:79" *)
  output w_rdy;
  wire w_rdy;
  reg [31:0] storage [1023:0];
  initial begin
    storage[0] = 32'd0;
    storage[1] = 32'd0;
    storage[2] = 32'd0;
    storage[3] = 32'd0;
    storage[4] = 32'd0;
    storage[5] = 32'd0;
    storage[6] = 32'd0;
    storage[7] = 32'd0;
    storage[8] = 32'd0;
    storage[9] = 32'd0;
    storage[10] = 32'd0;
    storage[11] = 32'd0;
    storage[12] = 32'd0;
    storage[13] = 32'd0;
    storage[14] = 32'd0;
    storage[15] = 32'd0;
    storage[16] = 32'd0;
    storage[17] = 32'd0;
    storage[18] = 32'd0;
    storage[19] = 32'd0;
    storage[20] = 32'd0;
    storage[21] = 32'd0;
    storage[22] = 32'd0;
    storage[23] = 32'd0;
    storage[24] = 32'd0;
    storage[25] = 32'd0;
    storage[26] = 32'd0;
    storage[27] = 32'd0;
    storage[28] = 32'd0;
    storage[29] = 32'd0;
    storage[30] = 32'd0;
    storage[31] = 32'd0;
    storage[32] = 32'd0;
    storage[33] = 32'd0;
    storage[34] = 32'd0;
    storage[35] = 32'd0;
    storage[36] = 32'd0;
    storage[37] = 32'd0;
    storage[38] = 32'd0;
    storage[39] = 32'd0;
    storage[40] = 32'd0;
    storage[41] = 32'd0;
    storage[42] = 32'd0;
    storage[43] = 32'd0;
    storage[44] = 32'd0;
    storage[45] = 32'd0;
    storage[46] = 32'd0;
    storage[47] = 32'd0;
    storage[48] = 32'd0;
    storage[49] = 32'd0;
    storage[50] = 32'd0;
    storage[51] = 32'd0;
    storage[52] = 32'd0;
    storage[53] = 32'd0;
    storage[54] = 32'd0;
    storage[55] = 32'd0;
    storage[56] = 32'd0;
    storage[57] = 32'd0;
    storage[58] = 32'd0;
    storage[59] = 32'd0;
    storage[60] = 32'd0;
    storage[61] = 32'd0;
    storage[62] = 32'd0;
    storage[63] = 32'd0;
    storage[64] = 32'd0;
    storage[65] = 32'd0;
    storage[66] = 32'd0;
    storage[67] = 32'd0;
    storage[68] = 32'd0;
    storage[69] = 32'd0;
    storage[70] = 32'd0;
    storage[71] = 32'd0;
    storage[72] = 32'd0;
    storage[73] = 32'd0;
    storage[74] = 32'd0;
    storage[75] = 32'd0;
    storage[76] = 32'd0;
    storage[77] = 32'd0;
    storage[78] = 32'd0;
    storage[79] = 32'd0;
    storage[80] = 32'd0;
    storage[81] = 32'd0;
    storage[82] = 32'd0;
    storage[83] = 32'd0;
    storage[84] = 32'd0;
    storage[85] = 32'd0;
    storage[86] = 32'd0;
    storage[87] = 32'd0;
    storage[88] = 32'd0;
    storage[89] = 32'd0;
    storage[90] = 32'd0;
    storage[91] = 32'd0;
    storage[92] = 32'd0;
    storage[93] = 32'd0;
    storage[94] = 32'd0;
    storage[95] = 32'd0;
    storage[96] = 32'd0;
    storage[97] = 32'd0;
    storage[98] = 32'd0;
    storage[99] = 32'd0;
    storage[100] = 32'd0;
    storage[101] = 32'd0;
    storage[102] = 32'd0;
    storage[103] = 32'd0;
    storage[104] = 32'd0;
    storage[105] = 32'd0;
    storage[106] = 32'd0;
    storage[107] = 32'd0;
    storage[108] = 32'd0;
    storage[109] = 32'd0;
    storage[110] = 32'd0;
    storage[111] = 32'd0;
    storage[112] = 32'd0;
    storage[113] = 32'd0;
    storage[114] = 32'd0;
    storage[115] = 32'd0;
    storage[116] = 32'd0;
    storage[117] = 32'd0;
    storage[118] = 32'd0;
    storage[119] = 32'd0;
    storage[120] = 32'd0;
    storage[121] = 32'd0;
    storage[122] = 32'd0;
    storage[123] = 32'd0;
    storage[124] = 32'd0;
    storage[125] = 32'd0;
    storage[126] = 32'd0;
    storage[127] = 32'd0;
    storage[128] = 32'd0;
    storage[129] = 32'd0;
    storage[130] = 32'd0;
    storage[131] = 32'd0;
    storage[132] = 32'd0;
    storage[133] = 32'd0;
    storage[134] = 32'd0;
    storage[135] = 32'd0;
    storage[136] = 32'd0;
    storage[137] = 32'd0;
    storage[138] = 32'd0;
    storage[139] = 32'd0;
    storage[140] = 32'd0;
    storage[141] = 32'd0;
    storage[142] = 32'd0;
    storage[143] = 32'd0;
    storage[144] = 32'd0;
    storage[145] = 32'd0;
    storage[146] = 32'd0;
    storage[147] = 32'd0;
    storage[148] = 32'd0;
    storage[149] = 32'd0;
    storage[150] = 32'd0;
    storage[151] = 32'd0;
    storage[152] = 32'd0;
    storage[153] = 32'd0;
    storage[154] = 32'd0;
    storage[155] = 32'd0;
    storage[156] = 32'd0;
    storage[157] = 32'd0;
    storage[158] = 32'd0;
    storage[159] = 32'd0;
    storage[160] = 32'd0;
    storage[161] = 32'd0;
    storage[162] = 32'd0;
    storage[163] = 32'd0;
    storage[164] = 32'd0;
    storage[165] = 32'd0;
    storage[166] = 32'd0;
    storage[167] = 32'd0;
    storage[168] = 32'd0;
    storage[169] = 32'd0;
    storage[170] = 32'd0;
    storage[171] = 32'd0;
    storage[172] = 32'd0;
    storage[173] = 32'd0;
    storage[174] = 32'd0;
    storage[175] = 32'd0;
    storage[176] = 32'd0;
    storage[177] = 32'd0;
    storage[178] = 32'd0;
    storage[179] = 32'd0;
    storage[180] = 32'd0;
    storage[181] = 32'd0;
    storage[182] = 32'd0;
    storage[183] = 32'd0;
    storage[184] = 32'd0;
    storage[185] = 32'd0;
    storage[186] = 32'd0;
    storage[187] = 32'd0;
    storage[188] = 32'd0;
    storage[189] = 32'd0;
    storage[190] = 32'd0;
    storage[191] = 32'd0;
    storage[192] = 32'd0;
    storage[193] = 32'd0;
    storage[194] = 32'd0;
    storage[195] = 32'd0;
    storage[196] = 32'd0;
    storage[197] = 32'd0;
    storage[198] = 32'd0;
    storage[199] = 32'd0;
    storage[200] = 32'd0;
    storage[201] = 32'd0;
    storage[202] = 32'd0;
    storage[203] = 32'd0;
    storage[204] = 32'd0;
    storage[205] = 32'd0;
    storage[206] = 32'd0;
    storage[207] = 32'd0;
    storage[208] = 32'd0;
    storage[209] = 32'd0;
    storage[210] = 32'd0;
    storage[211] = 32'd0;
    storage[212] = 32'd0;
    storage[213] = 32'd0;
    storage[214] = 32'd0;
    storage[215] = 32'd0;
    storage[216] = 32'd0;
    storage[217] = 32'd0;
    storage[218] = 32'd0;
    storage[219] = 32'd0;
    storage[220] = 32'd0;
    storage[221] = 32'd0;
    storage[222] = 32'd0;
    storage[223] = 32'd0;
    storage[224] = 32'd0;
    storage[225] = 32'd0;
    storage[226] = 32'd0;
    storage[227] = 32'd0;
    storage[228] = 32'd0;
    storage[229] = 32'd0;
    storage[230] = 32'd0;
    storage[231] = 32'd0;
    storage[232] = 32'd0;
    storage[233] = 32'd0;
    storage[234] = 32'd0;
    storage[235] = 32'd0;
    storage[236] = 32'd0;
    storage[237] = 32'd0;
    storage[238] = 32'd0;
    storage[239] = 32'd0;
    storage[240] = 32'd0;
    storage[241] = 32'd0;
    storage[242] = 32'd0;
    storage[243] = 32'd0;
    storage[244] = 32'd0;
    storage[245] = 32'd0;
    storage[246] = 32'd0;
    storage[247] = 32'd0;
    storage[248] = 32'd0;
    storage[249] = 32'd0;
    storage[250] = 32'd0;
    storage[251] = 32'd0;
    storage[252] = 32'd0;
    storage[253] = 32'd0;
    storage[254] = 32'd0;
    storage[255] = 32'd0;
    storage[256] = 32'd0;
    storage[257] = 32'd0;
    storage[258] = 32'd0;
    storage[259] = 32'd0;
    storage[260] = 32'd0;
    storage[261] = 32'd0;
    storage[262] = 32'd0;
    storage[263] = 32'd0;
    storage[264] = 32'd0;
    storage[265] = 32'd0;
    storage[266] = 32'd0;
    storage[267] = 32'd0;
    storage[268] = 32'd0;
    storage[269] = 32'd0;
    storage[270] = 32'd0;
    storage[271] = 32'd0;
    storage[272] = 32'd0;
    storage[273] = 32'd0;
    storage[274] = 32'd0;
    storage[275] = 32'd0;
    storage[276] = 32'd0;
    storage[277] = 32'd0;
    storage[278] = 32'd0;
    storage[279] = 32'd0;
    storage[280] = 32'd0;
    storage[281] = 32'd0;
    storage[282] = 32'd0;
    storage[283] = 32'd0;
    storage[284] = 32'd0;
    storage[285] = 32'd0;
    storage[286] = 32'd0;
    storage[287] = 32'd0;
    storage[288] = 32'd0;
    storage[289] = 32'd0;
    storage[290] = 32'd0;
    storage[291] = 32'd0;
    storage[292] = 32'd0;
    storage[293] = 32'd0;
    storage[294] = 32'd0;
    storage[295] = 32'd0;
    storage[296] = 32'd0;
    storage[297] = 32'd0;
    storage[298] = 32'd0;
    storage[299] = 32'd0;
    storage[300] = 32'd0;
    storage[301] = 32'd0;
    storage[302] = 32'd0;
    storage[303] = 32'd0;
    storage[304] = 32'd0;
    storage[305] = 32'd0;
    storage[306] = 32'd0;
    storage[307] = 32'd0;
    storage[308] = 32'd0;
    storage[309] = 32'd0;
    storage[310] = 32'd0;
    storage[311] = 32'd0;
    storage[312] = 32'd0;
    storage[313] = 32'd0;
    storage[314] = 32'd0;
    storage[315] = 32'd0;
    storage[316] = 32'd0;
    storage[317] = 32'd0;
    storage[318] = 32'd0;
    storage[319] = 32'd0;
    storage[320] = 32'd0;
    storage[321] = 32'd0;
    storage[322] = 32'd0;
    storage[323] = 32'd0;
    storage[324] = 32'd0;
    storage[325] = 32'd0;
    storage[326] = 32'd0;
    storage[327] = 32'd0;
    storage[328] = 32'd0;
    storage[329] = 32'd0;
    storage[330] = 32'd0;
    storage[331] = 32'd0;
    storage[332] = 32'd0;
    storage[333] = 32'd0;
    storage[334] = 32'd0;
    storage[335] = 32'd0;
    storage[336] = 32'd0;
    storage[337] = 32'd0;
    storage[338] = 32'd0;
    storage[339] = 32'd0;
    storage[340] = 32'd0;
    storage[341] = 32'd0;
    storage[342] = 32'd0;
    storage[343] = 32'd0;
    storage[344] = 32'd0;
    storage[345] = 32'd0;
    storage[346] = 32'd0;
    storage[347] = 32'd0;
    storage[348] = 32'd0;
    storage[349] = 32'd0;
    storage[350] = 32'd0;
    storage[351] = 32'd0;
    storage[352] = 32'd0;
    storage[353] = 32'd0;
    storage[354] = 32'd0;
    storage[355] = 32'd0;
    storage[356] = 32'd0;
    storage[357] = 32'd0;
    storage[358] = 32'd0;
    storage[359] = 32'd0;
    storage[360] = 32'd0;
    storage[361] = 32'd0;
    storage[362] = 32'd0;
    storage[363] = 32'd0;
    storage[364] = 32'd0;
    storage[365] = 32'd0;
    storage[366] = 32'd0;
    storage[367] = 32'd0;
    storage[368] = 32'd0;
    storage[369] = 32'd0;
    storage[370] = 32'd0;
    storage[371] = 32'd0;
    storage[372] = 32'd0;
    storage[373] = 32'd0;
    storage[374] = 32'd0;
    storage[375] = 32'd0;
    storage[376] = 32'd0;
    storage[377] = 32'd0;
    storage[378] = 32'd0;
    storage[379] = 32'd0;
    storage[380] = 32'd0;
    storage[381] = 32'd0;
    storage[382] = 32'd0;
    storage[383] = 32'd0;
    storage[384] = 32'd0;
    storage[385] = 32'd0;
    storage[386] = 32'd0;
    storage[387] = 32'd0;
    storage[388] = 32'd0;
    storage[389] = 32'd0;
    storage[390] = 32'd0;
    storage[391] = 32'd0;
    storage[392] = 32'd0;
    storage[393] = 32'd0;
    storage[394] = 32'd0;
    storage[395] = 32'd0;
    storage[396] = 32'd0;
    storage[397] = 32'd0;
    storage[398] = 32'd0;
    storage[399] = 32'd0;
    storage[400] = 32'd0;
    storage[401] = 32'd0;
    storage[402] = 32'd0;
    storage[403] = 32'd0;
    storage[404] = 32'd0;
    storage[405] = 32'd0;
    storage[406] = 32'd0;
    storage[407] = 32'd0;
    storage[408] = 32'd0;
    storage[409] = 32'd0;
    storage[410] = 32'd0;
    storage[411] = 32'd0;
    storage[412] = 32'd0;
    storage[413] = 32'd0;
    storage[414] = 32'd0;
    storage[415] = 32'd0;
    storage[416] = 32'd0;
    storage[417] = 32'd0;
    storage[418] = 32'd0;
    storage[419] = 32'd0;
    storage[420] = 32'd0;
    storage[421] = 32'd0;
    storage[422] = 32'd0;
    storage[423] = 32'd0;
    storage[424] = 32'd0;
    storage[425] = 32'd0;
    storage[426] = 32'd0;
    storage[427] = 32'd0;
    storage[428] = 32'd0;
    storage[429] = 32'd0;
    storage[430] = 32'd0;
    storage[431] = 32'd0;
    storage[432] = 32'd0;
    storage[433] = 32'd0;
    storage[434] = 32'd0;
    storage[435] = 32'd0;
    storage[436] = 32'd0;
    storage[437] = 32'd0;
    storage[438] = 32'd0;
    storage[439] = 32'd0;
    storage[440] = 32'd0;
    storage[441] = 32'd0;
    storage[442] = 32'd0;
    storage[443] = 32'd0;
    storage[444] = 32'd0;
    storage[445] = 32'd0;
    storage[446] = 32'd0;
    storage[447] = 32'd0;
    storage[448] = 32'd0;
    storage[449] = 32'd0;
    storage[450] = 32'd0;
    storage[451] = 32'd0;
    storage[452] = 32'd0;
    storage[453] = 32'd0;
    storage[454] = 32'd0;
    storage[455] = 32'd0;
    storage[456] = 32'd0;
    storage[457] = 32'd0;
    storage[458] = 32'd0;
    storage[459] = 32'd0;
    storage[460] = 32'd0;
    storage[461] = 32'd0;
    storage[462] = 32'd0;
    storage[463] = 32'd0;
    storage[464] = 32'd0;
    storage[465] = 32'd0;
    storage[466] = 32'd0;
    storage[467] = 32'd0;
    storage[468] = 32'd0;
    storage[469] = 32'd0;
    storage[470] = 32'd0;
    storage[471] = 32'd0;
    storage[472] = 32'd0;
    storage[473] = 32'd0;
    storage[474] = 32'd0;
    storage[475] = 32'd0;
    storage[476] = 32'd0;
    storage[477] = 32'd0;
    storage[478] = 32'd0;
    storage[479] = 32'd0;
    storage[480] = 32'd0;
    storage[481] = 32'd0;
    storage[482] = 32'd0;
    storage[483] = 32'd0;
    storage[484] = 32'd0;
    storage[485] = 32'd0;
    storage[486] = 32'd0;
    storage[487] = 32'd0;
    storage[488] = 32'd0;
    storage[489] = 32'd0;
    storage[490] = 32'd0;
    storage[491] = 32'd0;
    storage[492] = 32'd0;
    storage[493] = 32'd0;
    storage[494] = 32'd0;
    storage[495] = 32'd0;
    storage[496] = 32'd0;
    storage[497] = 32'd0;
    storage[498] = 32'd0;
    storage[499] = 32'd0;
    storage[500] = 32'd0;
    storage[501] = 32'd0;
    storage[502] = 32'd0;
    storage[503] = 32'd0;
    storage[504] = 32'd0;
    storage[505] = 32'd0;
    storage[506] = 32'd0;
    storage[507] = 32'd0;
    storage[508] = 32'd0;
    storage[509] = 32'd0;
    storage[510] = 32'd0;
    storage[511] = 32'd0;
    storage[512] = 32'd0;
    storage[513] = 32'd0;
    storage[514] = 32'd0;
    storage[515] = 32'd0;
    storage[516] = 32'd0;
    storage[517] = 32'd0;
    storage[518] = 32'd0;
    storage[519] = 32'd0;
    storage[520] = 32'd0;
    storage[521] = 32'd0;
    storage[522] = 32'd0;
    storage[523] = 32'd0;
    storage[524] = 32'd0;
    storage[525] = 32'd0;
    storage[526] = 32'd0;
    storage[527] = 32'd0;
    storage[528] = 32'd0;
    storage[529] = 32'd0;
    storage[530] = 32'd0;
    storage[531] = 32'd0;
    storage[532] = 32'd0;
    storage[533] = 32'd0;
    storage[534] = 32'd0;
    storage[535] = 32'd0;
    storage[536] = 32'd0;
    storage[537] = 32'd0;
    storage[538] = 32'd0;
    storage[539] = 32'd0;
    storage[540] = 32'd0;
    storage[541] = 32'd0;
    storage[542] = 32'd0;
    storage[543] = 32'd0;
    storage[544] = 32'd0;
    storage[545] = 32'd0;
    storage[546] = 32'd0;
    storage[547] = 32'd0;
    storage[548] = 32'd0;
    storage[549] = 32'd0;
    storage[550] = 32'd0;
    storage[551] = 32'd0;
    storage[552] = 32'd0;
    storage[553] = 32'd0;
    storage[554] = 32'd0;
    storage[555] = 32'd0;
    storage[556] = 32'd0;
    storage[557] = 32'd0;
    storage[558] = 32'd0;
    storage[559] = 32'd0;
    storage[560] = 32'd0;
    storage[561] = 32'd0;
    storage[562] = 32'd0;
    storage[563] = 32'd0;
    storage[564] = 32'd0;
    storage[565] = 32'd0;
    storage[566] = 32'd0;
    storage[567] = 32'd0;
    storage[568] = 32'd0;
    storage[569] = 32'd0;
    storage[570] = 32'd0;
    storage[571] = 32'd0;
    storage[572] = 32'd0;
    storage[573] = 32'd0;
    storage[574] = 32'd0;
    storage[575] = 32'd0;
    storage[576] = 32'd0;
    storage[577] = 32'd0;
    storage[578] = 32'd0;
    storage[579] = 32'd0;
    storage[580] = 32'd0;
    storage[581] = 32'd0;
    storage[582] = 32'd0;
    storage[583] = 32'd0;
    storage[584] = 32'd0;
    storage[585] = 32'd0;
    storage[586] = 32'd0;
    storage[587] = 32'd0;
    storage[588] = 32'd0;
    storage[589] = 32'd0;
    storage[590] = 32'd0;
    storage[591] = 32'd0;
    storage[592] = 32'd0;
    storage[593] = 32'd0;
    storage[594] = 32'd0;
    storage[595] = 32'd0;
    storage[596] = 32'd0;
    storage[597] = 32'd0;
    storage[598] = 32'd0;
    storage[599] = 32'd0;
    storage[600] = 32'd0;
    storage[601] = 32'd0;
    storage[602] = 32'd0;
    storage[603] = 32'd0;
    storage[604] = 32'd0;
    storage[605] = 32'd0;
    storage[606] = 32'd0;
    storage[607] = 32'd0;
    storage[608] = 32'd0;
    storage[609] = 32'd0;
    storage[610] = 32'd0;
    storage[611] = 32'd0;
    storage[612] = 32'd0;
    storage[613] = 32'd0;
    storage[614] = 32'd0;
    storage[615] = 32'd0;
    storage[616] = 32'd0;
    storage[617] = 32'd0;
    storage[618] = 32'd0;
    storage[619] = 32'd0;
    storage[620] = 32'd0;
    storage[621] = 32'd0;
    storage[622] = 32'd0;
    storage[623] = 32'd0;
    storage[624] = 32'd0;
    storage[625] = 32'd0;
    storage[626] = 32'd0;
    storage[627] = 32'd0;
    storage[628] = 32'd0;
    storage[629] = 32'd0;
    storage[630] = 32'd0;
    storage[631] = 32'd0;
    storage[632] = 32'd0;
    storage[633] = 32'd0;
    storage[634] = 32'd0;
    storage[635] = 32'd0;
    storage[636] = 32'd0;
    storage[637] = 32'd0;
    storage[638] = 32'd0;
    storage[639] = 32'd0;
    storage[640] = 32'd0;
    storage[641] = 32'd0;
    storage[642] = 32'd0;
    storage[643] = 32'd0;
    storage[644] = 32'd0;
    storage[645] = 32'd0;
    storage[646] = 32'd0;
    storage[647] = 32'd0;
    storage[648] = 32'd0;
    storage[649] = 32'd0;
    storage[650] = 32'd0;
    storage[651] = 32'd0;
    storage[652] = 32'd0;
    storage[653] = 32'd0;
    storage[654] = 32'd0;
    storage[655] = 32'd0;
    storage[656] = 32'd0;
    storage[657] = 32'd0;
    storage[658] = 32'd0;
    storage[659] = 32'd0;
    storage[660] = 32'd0;
    storage[661] = 32'd0;
    storage[662] = 32'd0;
    storage[663] = 32'd0;
    storage[664] = 32'd0;
    storage[665] = 32'd0;
    storage[666] = 32'd0;
    storage[667] = 32'd0;
    storage[668] = 32'd0;
    storage[669] = 32'd0;
    storage[670] = 32'd0;
    storage[671] = 32'd0;
    storage[672] = 32'd0;
    storage[673] = 32'd0;
    storage[674] = 32'd0;
    storage[675] = 32'd0;
    storage[676] = 32'd0;
    storage[677] = 32'd0;
    storage[678] = 32'd0;
    storage[679] = 32'd0;
    storage[680] = 32'd0;
    storage[681] = 32'd0;
    storage[682] = 32'd0;
    storage[683] = 32'd0;
    storage[684] = 32'd0;
    storage[685] = 32'd0;
    storage[686] = 32'd0;
    storage[687] = 32'd0;
    storage[688] = 32'd0;
    storage[689] = 32'd0;
    storage[690] = 32'd0;
    storage[691] = 32'd0;
    storage[692] = 32'd0;
    storage[693] = 32'd0;
    storage[694] = 32'd0;
    storage[695] = 32'd0;
    storage[696] = 32'd0;
    storage[697] = 32'd0;
    storage[698] = 32'd0;
    storage[699] = 32'd0;
    storage[700] = 32'd0;
    storage[701] = 32'd0;
    storage[702] = 32'd0;
    storage[703] = 32'd0;
    storage[704] = 32'd0;
    storage[705] = 32'd0;
    storage[706] = 32'd0;
    storage[707] = 32'd0;
    storage[708] = 32'd0;
    storage[709] = 32'd0;
    storage[710] = 32'd0;
    storage[711] = 32'd0;
    storage[712] = 32'd0;
    storage[713] = 32'd0;
    storage[714] = 32'd0;
    storage[715] = 32'd0;
    storage[716] = 32'd0;
    storage[717] = 32'd0;
    storage[718] = 32'd0;
    storage[719] = 32'd0;
    storage[720] = 32'd0;
    storage[721] = 32'd0;
    storage[722] = 32'd0;
    storage[723] = 32'd0;
    storage[724] = 32'd0;
    storage[725] = 32'd0;
    storage[726] = 32'd0;
    storage[727] = 32'd0;
    storage[728] = 32'd0;
    storage[729] = 32'd0;
    storage[730] = 32'd0;
    storage[731] = 32'd0;
    storage[732] = 32'd0;
    storage[733] = 32'd0;
    storage[734] = 32'd0;
    storage[735] = 32'd0;
    storage[736] = 32'd0;
    storage[737] = 32'd0;
    storage[738] = 32'd0;
    storage[739] = 32'd0;
    storage[740] = 32'd0;
    storage[741] = 32'd0;
    storage[742] = 32'd0;
    storage[743] = 32'd0;
    storage[744] = 32'd0;
    storage[745] = 32'd0;
    storage[746] = 32'd0;
    storage[747] = 32'd0;
    storage[748] = 32'd0;
    storage[749] = 32'd0;
    storage[750] = 32'd0;
    storage[751] = 32'd0;
    storage[752] = 32'd0;
    storage[753] = 32'd0;
    storage[754] = 32'd0;
    storage[755] = 32'd0;
    storage[756] = 32'd0;
    storage[757] = 32'd0;
    storage[758] = 32'd0;
    storage[759] = 32'd0;
    storage[760] = 32'd0;
    storage[761] = 32'd0;
    storage[762] = 32'd0;
    storage[763] = 32'd0;
    storage[764] = 32'd0;
    storage[765] = 32'd0;
    storage[766] = 32'd0;
    storage[767] = 32'd0;
    storage[768] = 32'd0;
    storage[769] = 32'd0;
    storage[770] = 32'd0;
    storage[771] = 32'd0;
    storage[772] = 32'd0;
    storage[773] = 32'd0;
    storage[774] = 32'd0;
    storage[775] = 32'd0;
    storage[776] = 32'd0;
    storage[777] = 32'd0;
    storage[778] = 32'd0;
    storage[779] = 32'd0;
    storage[780] = 32'd0;
    storage[781] = 32'd0;
    storage[782] = 32'd0;
    storage[783] = 32'd0;
    storage[784] = 32'd0;
    storage[785] = 32'd0;
    storage[786] = 32'd0;
    storage[787] = 32'd0;
    storage[788] = 32'd0;
    storage[789] = 32'd0;
    storage[790] = 32'd0;
    storage[791] = 32'd0;
    storage[792] = 32'd0;
    storage[793] = 32'd0;
    storage[794] = 32'd0;
    storage[795] = 32'd0;
    storage[796] = 32'd0;
    storage[797] = 32'd0;
    storage[798] = 32'd0;
    storage[799] = 32'd0;
    storage[800] = 32'd0;
    storage[801] = 32'd0;
    storage[802] = 32'd0;
    storage[803] = 32'd0;
    storage[804] = 32'd0;
    storage[805] = 32'd0;
    storage[806] = 32'd0;
    storage[807] = 32'd0;
    storage[808] = 32'd0;
    storage[809] = 32'd0;
    storage[810] = 32'd0;
    storage[811] = 32'd0;
    storage[812] = 32'd0;
    storage[813] = 32'd0;
    storage[814] = 32'd0;
    storage[815] = 32'd0;
    storage[816] = 32'd0;
    storage[817] = 32'd0;
    storage[818] = 32'd0;
    storage[819] = 32'd0;
    storage[820] = 32'd0;
    storage[821] = 32'd0;
    storage[822] = 32'd0;
    storage[823] = 32'd0;
    storage[824] = 32'd0;
    storage[825] = 32'd0;
    storage[826] = 32'd0;
    storage[827] = 32'd0;
    storage[828] = 32'd0;
    storage[829] = 32'd0;
    storage[830] = 32'd0;
    storage[831] = 32'd0;
    storage[832] = 32'd0;
    storage[833] = 32'd0;
    storage[834] = 32'd0;
    storage[835] = 32'd0;
    storage[836] = 32'd0;
    storage[837] = 32'd0;
    storage[838] = 32'd0;
    storage[839] = 32'd0;
    storage[840] = 32'd0;
    storage[841] = 32'd0;
    storage[842] = 32'd0;
    storage[843] = 32'd0;
    storage[844] = 32'd0;
    storage[845] = 32'd0;
    storage[846] = 32'd0;
    storage[847] = 32'd0;
    storage[848] = 32'd0;
    storage[849] = 32'd0;
    storage[850] = 32'd0;
    storage[851] = 32'd0;
    storage[852] = 32'd0;
    storage[853] = 32'd0;
    storage[854] = 32'd0;
    storage[855] = 32'd0;
    storage[856] = 32'd0;
    storage[857] = 32'd0;
    storage[858] = 32'd0;
    storage[859] = 32'd0;
    storage[860] = 32'd0;
    storage[861] = 32'd0;
    storage[862] = 32'd0;
    storage[863] = 32'd0;
    storage[864] = 32'd0;
    storage[865] = 32'd0;
    storage[866] = 32'd0;
    storage[867] = 32'd0;
    storage[868] = 32'd0;
    storage[869] = 32'd0;
    storage[870] = 32'd0;
    storage[871] = 32'd0;
    storage[872] = 32'd0;
    storage[873] = 32'd0;
    storage[874] = 32'd0;
    storage[875] = 32'd0;
    storage[876] = 32'd0;
    storage[877] = 32'd0;
    storage[878] = 32'd0;
    storage[879] = 32'd0;
    storage[880] = 32'd0;
    storage[881] = 32'd0;
    storage[882] = 32'd0;
    storage[883] = 32'd0;
    storage[884] = 32'd0;
    storage[885] = 32'd0;
    storage[886] = 32'd0;
    storage[887] = 32'd0;
    storage[888] = 32'd0;
    storage[889] = 32'd0;
    storage[890] = 32'd0;
    storage[891] = 32'd0;
    storage[892] = 32'd0;
    storage[893] = 32'd0;
    storage[894] = 32'd0;
    storage[895] = 32'd0;
    storage[896] = 32'd0;
    storage[897] = 32'd0;
    storage[898] = 32'd0;
    storage[899] = 32'd0;
    storage[900] = 32'd0;
    storage[901] = 32'd0;
    storage[902] = 32'd0;
    storage[903] = 32'd0;
    storage[904] = 32'd0;
    storage[905] = 32'd0;
    storage[906] = 32'd0;
    storage[907] = 32'd0;
    storage[908] = 32'd0;
    storage[909] = 32'd0;
    storage[910] = 32'd0;
    storage[911] = 32'd0;
    storage[912] = 32'd0;
    storage[913] = 32'd0;
    storage[914] = 32'd0;
    storage[915] = 32'd0;
    storage[916] = 32'd0;
    storage[917] = 32'd0;
    storage[918] = 32'd0;
    storage[919] = 32'd0;
    storage[920] = 32'd0;
    storage[921] = 32'd0;
    storage[922] = 32'd0;
    storage[923] = 32'd0;
    storage[924] = 32'd0;
    storage[925] = 32'd0;
    storage[926] = 32'd0;
    storage[927] = 32'd0;
    storage[928] = 32'd0;
    storage[929] = 32'd0;
    storage[930] = 32'd0;
    storage[931] = 32'd0;
    storage[932] = 32'd0;
    storage[933] = 32'd0;
    storage[934] = 32'd0;
    storage[935] = 32'd0;
    storage[936] = 32'd0;
    storage[937] = 32'd0;
    storage[938] = 32'd0;
    storage[939] = 32'd0;
    storage[940] = 32'd0;
    storage[941] = 32'd0;
    storage[942] = 32'd0;
    storage[943] = 32'd0;
    storage[944] = 32'd0;
    storage[945] = 32'd0;
    storage[946] = 32'd0;
    storage[947] = 32'd0;
    storage[948] = 32'd0;
    storage[949] = 32'd0;
    storage[950] = 32'd0;
    storage[951] = 32'd0;
    storage[952] = 32'd0;
    storage[953] = 32'd0;
    storage[954] = 32'd0;
    storage[955] = 32'd0;
    storage[956] = 32'd0;
    storage[957] = 32'd0;
    storage[958] = 32'd0;
    storage[959] = 32'd0;
    storage[960] = 32'd0;
    storage[961] = 32'd0;
    storage[962] = 32'd0;
    storage[963] = 32'd0;
    storage[964] = 32'd0;
    storage[965] = 32'd0;
    storage[966] = 32'd0;
    storage[967] = 32'd0;
    storage[968] = 32'd0;
    storage[969] = 32'd0;
    storage[970] = 32'd0;
    storage[971] = 32'd0;
    storage[972] = 32'd0;
    storage[973] = 32'd0;
    storage[974] = 32'd0;
    storage[975] = 32'd0;
    storage[976] = 32'd0;
    storage[977] = 32'd0;
    storage[978] = 32'd0;
    storage[979] = 32'd0;
    storage[980] = 32'd0;
    storage[981] = 32'd0;
    storage[982] = 32'd0;
    storage[983] = 32'd0;
    storage[984] = 32'd0;
    storage[985] = 32'd0;
    storage[986] = 32'd0;
    storage[987] = 32'd0;
    storage[988] = 32'd0;
    storage[989] = 32'd0;
    storage[990] = 32'd0;
    storage[991] = 32'd0;
    storage[992] = 32'd0;
    storage[993] = 32'd0;
    storage[994] = 32'd0;
    storage[995] = 32'd0;
    storage[996] = 32'd0;
    storage[997] = 32'd0;
    storage[998] = 32'd0;
    storage[999] = 32'd0;
    storage[1000] = 32'd0;
    storage[1001] = 32'd0;
    storage[1002] = 32'd0;
    storage[1003] = 32'd0;
    storage[1004] = 32'd0;
    storage[1005] = 32'd0;
    storage[1006] = 32'd0;
    storage[1007] = 32'd0;
    storage[1008] = 32'd0;
    storage[1009] = 32'd0;
    storage[1010] = 32'd0;
    storage[1011] = 32'd0;
    storage[1012] = 32'd0;
    storage[1013] = 32'd0;
    storage[1014] = 32'd0;
    storage[1015] = 32'd0;
    storage[1016] = 32'd0;
    storage[1017] = 32'd0;
    storage[1018] = 32'd0;
    storage[1019] = 32'd0;
    storage[1020] = 32'd0;
    storage[1021] = 32'd0;
    storage[1022] = 32'd0;
    storage[1023] = 32'd0;
  end
  always @(posedge clk) begin
    if (storage_w_en)
      storage[storage_w_addr] <= storage_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    if (storage_r_en) begin
      _0_ <= storage[storage_r_addr];
    end
  end
  assign storage_r_data = _0_;
  assign \$11  = produce + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *) 1'h1;
  assign \$13  = r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *) r_en;
  assign \$16  = consume + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *) 1'h1;
  assign \$18  = w_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *) w_en;
  assign \$21  = r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *) r_en;
  assign \$20  = ~ (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *) \$21 ;
  assign \$24  = \$18  & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *) \$20 ;
  assign \$27  = level + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:168" *) 1'h1;
  assign \$2  = level != (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:134" *) 11'h400;
  assign \$29  = r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *) r_en;
  assign \$32  = w_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *) w_en;
  assign \$31  = ~ (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *) \$32 ;
  assign \$35  = \$29  & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *) \$31 ;
  assign \$38  = level - (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:170" *) 1'h1;
  assign \$4  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:135" *) level;
  assign \$6  = w_en & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:153" *) w_rdy;
  assign \$8  = w_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *) w_en;
  always @(posedge clk)
    level <= \level$next ;
  always @(posedge clk)
    consume <= \consume$next ;
  always @(posedge clk)
    produce <= \produce$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$58 ) begin end
    \consume$next  = consume;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:164" *)
    casez (\$13 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:164" */
      1'h1:
          \consume$next  = \$16 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \consume$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$58 ) begin end
    \level$next  = level;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *)
    casez (\$24 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" */
      1'h1:
          \level$next  = \$27 [10:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *)
    casez (\$35 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" */
      1'h1:
          \level$next  = \$38 [10:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \level$next  = 11'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$58 ) begin end
    \produce$next  = produce;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:155" *)
    casez (\$8 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:155" */
      1'h1:
          \produce$next  = \$11 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \produce$next  = 10'h000;
    endcase
  end
  assign \$10  = \$11 ;
  assign \$15  = \$16 ;
  assign \$26  = \$27 ;
  assign \$37  = \$38 ;
  assign storage_r_en = r_en;
  assign r_data = storage_r_data;
  assign storage_r_addr = consume;
  assign storage_w_en = \$6 ;
  assign storage_w_data = w_data;
  assign storage_w_addr = produce;
  assign r_level = level;
  assign w_level = level;
  assign r_rdy = \$4 ;
  assign w_rdy = \$2 ;
endmodule

(* \amaranth.hierarchy  = "top.pipe_b.unbuffered" *)
(* generator = "Amaranth" *)
module \unbuffered$4 (clk, w_data, w_en, w_rdy, r_data, r_en, r_rdy, level, rst);
  reg \$auto$verilog_backend.cc:2083:dump_module$59  = 0;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$10 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$11 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *)
  wire \$13 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$15 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *)
  wire [10:0] \$16 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *)
  wire \$18 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:134" *)
  wire \$2 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *)
  wire \$20 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *)
  wire \$21 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *)
  wire \$24 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:168" *)
  wire [11:0] \$26 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:168" *)
  wire [11:0] \$27 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *)
  wire \$29 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *)
  wire \$31 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *)
  wire \$32 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *)
  wire \$35 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:170" *)
  wire [11:0] \$37 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:170" *)
  wire [11:0] \$38 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:135" *)
  wire \$4 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:153" *)
  wire \$6 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *)
  wire \$8 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:148" *)
  reg [9:0] consume = 10'h000;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:148" *)
  reg [9:0] \consume$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:122" *)
  output [10:0] level;
  reg [10:0] level = 11'h000;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:122" *)
  reg [10:0] \level$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:147" *)
  reg [9:0] produce = 10'h000;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:147" *)
  reg [9:0] \produce$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:83" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:85" *)
  input r_en;
  wire r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:86" *)
  wire [10:0] r_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  wire r_rdy;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:145" *)
  wire [9:0] storage_r_addr;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:145" *)
  wire [31:0] storage_r_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:145" *)
  wire storage_r_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:144" *)
  wire [9:0] storage_w_addr;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:144" *)
  wire [31:0] storage_w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:144" *)
  wire storage_w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:78" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:80" *)
  input w_en;
  wire w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:81" *)
  wire [10:0] w_level;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:79" *)
  output w_rdy;
  wire w_rdy;
  reg [31:0] storage [1023:0];
  initial begin
    storage[0] = 32'd0;
    storage[1] = 32'd0;
    storage[2] = 32'd0;
    storage[3] = 32'd0;
    storage[4] = 32'd0;
    storage[5] = 32'd0;
    storage[6] = 32'd0;
    storage[7] = 32'd0;
    storage[8] = 32'd0;
    storage[9] = 32'd0;
    storage[10] = 32'd0;
    storage[11] = 32'd0;
    storage[12] = 32'd0;
    storage[13] = 32'd0;
    storage[14] = 32'd0;
    storage[15] = 32'd0;
    storage[16] = 32'd0;
    storage[17] = 32'd0;
    storage[18] = 32'd0;
    storage[19] = 32'd0;
    storage[20] = 32'd0;
    storage[21] = 32'd0;
    storage[22] = 32'd0;
    storage[23] = 32'd0;
    storage[24] = 32'd0;
    storage[25] = 32'd0;
    storage[26] = 32'd0;
    storage[27] = 32'd0;
    storage[28] = 32'd0;
    storage[29] = 32'd0;
    storage[30] = 32'd0;
    storage[31] = 32'd0;
    storage[32] = 32'd0;
    storage[33] = 32'd0;
    storage[34] = 32'd0;
    storage[35] = 32'd0;
    storage[36] = 32'd0;
    storage[37] = 32'd0;
    storage[38] = 32'd0;
    storage[39] = 32'd0;
    storage[40] = 32'd0;
    storage[41] = 32'd0;
    storage[42] = 32'd0;
    storage[43] = 32'd0;
    storage[44] = 32'd0;
    storage[45] = 32'd0;
    storage[46] = 32'd0;
    storage[47] = 32'd0;
    storage[48] = 32'd0;
    storage[49] = 32'd0;
    storage[50] = 32'd0;
    storage[51] = 32'd0;
    storage[52] = 32'd0;
    storage[53] = 32'd0;
    storage[54] = 32'd0;
    storage[55] = 32'd0;
    storage[56] = 32'd0;
    storage[57] = 32'd0;
    storage[58] = 32'd0;
    storage[59] = 32'd0;
    storage[60] = 32'd0;
    storage[61] = 32'd0;
    storage[62] = 32'd0;
    storage[63] = 32'd0;
    storage[64] = 32'd0;
    storage[65] = 32'd0;
    storage[66] = 32'd0;
    storage[67] = 32'd0;
    storage[68] = 32'd0;
    storage[69] = 32'd0;
    storage[70] = 32'd0;
    storage[71] = 32'd0;
    storage[72] = 32'd0;
    storage[73] = 32'd0;
    storage[74] = 32'd0;
    storage[75] = 32'd0;
    storage[76] = 32'd0;
    storage[77] = 32'd0;
    storage[78] = 32'd0;
    storage[79] = 32'd0;
    storage[80] = 32'd0;
    storage[81] = 32'd0;
    storage[82] = 32'd0;
    storage[83] = 32'd0;
    storage[84] = 32'd0;
    storage[85] = 32'd0;
    storage[86] = 32'd0;
    storage[87] = 32'd0;
    storage[88] = 32'd0;
    storage[89] = 32'd0;
    storage[90] = 32'd0;
    storage[91] = 32'd0;
    storage[92] = 32'd0;
    storage[93] = 32'd0;
    storage[94] = 32'd0;
    storage[95] = 32'd0;
    storage[96] = 32'd0;
    storage[97] = 32'd0;
    storage[98] = 32'd0;
    storage[99] = 32'd0;
    storage[100] = 32'd0;
    storage[101] = 32'd0;
    storage[102] = 32'd0;
    storage[103] = 32'd0;
    storage[104] = 32'd0;
    storage[105] = 32'd0;
    storage[106] = 32'd0;
    storage[107] = 32'd0;
    storage[108] = 32'd0;
    storage[109] = 32'd0;
    storage[110] = 32'd0;
    storage[111] = 32'd0;
    storage[112] = 32'd0;
    storage[113] = 32'd0;
    storage[114] = 32'd0;
    storage[115] = 32'd0;
    storage[116] = 32'd0;
    storage[117] = 32'd0;
    storage[118] = 32'd0;
    storage[119] = 32'd0;
    storage[120] = 32'd0;
    storage[121] = 32'd0;
    storage[122] = 32'd0;
    storage[123] = 32'd0;
    storage[124] = 32'd0;
    storage[125] = 32'd0;
    storage[126] = 32'd0;
    storage[127] = 32'd0;
    storage[128] = 32'd0;
    storage[129] = 32'd0;
    storage[130] = 32'd0;
    storage[131] = 32'd0;
    storage[132] = 32'd0;
    storage[133] = 32'd0;
    storage[134] = 32'd0;
    storage[135] = 32'd0;
    storage[136] = 32'd0;
    storage[137] = 32'd0;
    storage[138] = 32'd0;
    storage[139] = 32'd0;
    storage[140] = 32'd0;
    storage[141] = 32'd0;
    storage[142] = 32'd0;
    storage[143] = 32'd0;
    storage[144] = 32'd0;
    storage[145] = 32'd0;
    storage[146] = 32'd0;
    storage[147] = 32'd0;
    storage[148] = 32'd0;
    storage[149] = 32'd0;
    storage[150] = 32'd0;
    storage[151] = 32'd0;
    storage[152] = 32'd0;
    storage[153] = 32'd0;
    storage[154] = 32'd0;
    storage[155] = 32'd0;
    storage[156] = 32'd0;
    storage[157] = 32'd0;
    storage[158] = 32'd0;
    storage[159] = 32'd0;
    storage[160] = 32'd0;
    storage[161] = 32'd0;
    storage[162] = 32'd0;
    storage[163] = 32'd0;
    storage[164] = 32'd0;
    storage[165] = 32'd0;
    storage[166] = 32'd0;
    storage[167] = 32'd0;
    storage[168] = 32'd0;
    storage[169] = 32'd0;
    storage[170] = 32'd0;
    storage[171] = 32'd0;
    storage[172] = 32'd0;
    storage[173] = 32'd0;
    storage[174] = 32'd0;
    storage[175] = 32'd0;
    storage[176] = 32'd0;
    storage[177] = 32'd0;
    storage[178] = 32'd0;
    storage[179] = 32'd0;
    storage[180] = 32'd0;
    storage[181] = 32'd0;
    storage[182] = 32'd0;
    storage[183] = 32'd0;
    storage[184] = 32'd0;
    storage[185] = 32'd0;
    storage[186] = 32'd0;
    storage[187] = 32'd0;
    storage[188] = 32'd0;
    storage[189] = 32'd0;
    storage[190] = 32'd0;
    storage[191] = 32'd0;
    storage[192] = 32'd0;
    storage[193] = 32'd0;
    storage[194] = 32'd0;
    storage[195] = 32'd0;
    storage[196] = 32'd0;
    storage[197] = 32'd0;
    storage[198] = 32'd0;
    storage[199] = 32'd0;
    storage[200] = 32'd0;
    storage[201] = 32'd0;
    storage[202] = 32'd0;
    storage[203] = 32'd0;
    storage[204] = 32'd0;
    storage[205] = 32'd0;
    storage[206] = 32'd0;
    storage[207] = 32'd0;
    storage[208] = 32'd0;
    storage[209] = 32'd0;
    storage[210] = 32'd0;
    storage[211] = 32'd0;
    storage[212] = 32'd0;
    storage[213] = 32'd0;
    storage[214] = 32'd0;
    storage[215] = 32'd0;
    storage[216] = 32'd0;
    storage[217] = 32'd0;
    storage[218] = 32'd0;
    storage[219] = 32'd0;
    storage[220] = 32'd0;
    storage[221] = 32'd0;
    storage[222] = 32'd0;
    storage[223] = 32'd0;
    storage[224] = 32'd0;
    storage[225] = 32'd0;
    storage[226] = 32'd0;
    storage[227] = 32'd0;
    storage[228] = 32'd0;
    storage[229] = 32'd0;
    storage[230] = 32'd0;
    storage[231] = 32'd0;
    storage[232] = 32'd0;
    storage[233] = 32'd0;
    storage[234] = 32'd0;
    storage[235] = 32'd0;
    storage[236] = 32'd0;
    storage[237] = 32'd0;
    storage[238] = 32'd0;
    storage[239] = 32'd0;
    storage[240] = 32'd0;
    storage[241] = 32'd0;
    storage[242] = 32'd0;
    storage[243] = 32'd0;
    storage[244] = 32'd0;
    storage[245] = 32'd0;
    storage[246] = 32'd0;
    storage[247] = 32'd0;
    storage[248] = 32'd0;
    storage[249] = 32'd0;
    storage[250] = 32'd0;
    storage[251] = 32'd0;
    storage[252] = 32'd0;
    storage[253] = 32'd0;
    storage[254] = 32'd0;
    storage[255] = 32'd0;
    storage[256] = 32'd0;
    storage[257] = 32'd0;
    storage[258] = 32'd0;
    storage[259] = 32'd0;
    storage[260] = 32'd0;
    storage[261] = 32'd0;
    storage[262] = 32'd0;
    storage[263] = 32'd0;
    storage[264] = 32'd0;
    storage[265] = 32'd0;
    storage[266] = 32'd0;
    storage[267] = 32'd0;
    storage[268] = 32'd0;
    storage[269] = 32'd0;
    storage[270] = 32'd0;
    storage[271] = 32'd0;
    storage[272] = 32'd0;
    storage[273] = 32'd0;
    storage[274] = 32'd0;
    storage[275] = 32'd0;
    storage[276] = 32'd0;
    storage[277] = 32'd0;
    storage[278] = 32'd0;
    storage[279] = 32'd0;
    storage[280] = 32'd0;
    storage[281] = 32'd0;
    storage[282] = 32'd0;
    storage[283] = 32'd0;
    storage[284] = 32'd0;
    storage[285] = 32'd0;
    storage[286] = 32'd0;
    storage[287] = 32'd0;
    storage[288] = 32'd0;
    storage[289] = 32'd0;
    storage[290] = 32'd0;
    storage[291] = 32'd0;
    storage[292] = 32'd0;
    storage[293] = 32'd0;
    storage[294] = 32'd0;
    storage[295] = 32'd0;
    storage[296] = 32'd0;
    storage[297] = 32'd0;
    storage[298] = 32'd0;
    storage[299] = 32'd0;
    storage[300] = 32'd0;
    storage[301] = 32'd0;
    storage[302] = 32'd0;
    storage[303] = 32'd0;
    storage[304] = 32'd0;
    storage[305] = 32'd0;
    storage[306] = 32'd0;
    storage[307] = 32'd0;
    storage[308] = 32'd0;
    storage[309] = 32'd0;
    storage[310] = 32'd0;
    storage[311] = 32'd0;
    storage[312] = 32'd0;
    storage[313] = 32'd0;
    storage[314] = 32'd0;
    storage[315] = 32'd0;
    storage[316] = 32'd0;
    storage[317] = 32'd0;
    storage[318] = 32'd0;
    storage[319] = 32'd0;
    storage[320] = 32'd0;
    storage[321] = 32'd0;
    storage[322] = 32'd0;
    storage[323] = 32'd0;
    storage[324] = 32'd0;
    storage[325] = 32'd0;
    storage[326] = 32'd0;
    storage[327] = 32'd0;
    storage[328] = 32'd0;
    storage[329] = 32'd0;
    storage[330] = 32'd0;
    storage[331] = 32'd0;
    storage[332] = 32'd0;
    storage[333] = 32'd0;
    storage[334] = 32'd0;
    storage[335] = 32'd0;
    storage[336] = 32'd0;
    storage[337] = 32'd0;
    storage[338] = 32'd0;
    storage[339] = 32'd0;
    storage[340] = 32'd0;
    storage[341] = 32'd0;
    storage[342] = 32'd0;
    storage[343] = 32'd0;
    storage[344] = 32'd0;
    storage[345] = 32'd0;
    storage[346] = 32'd0;
    storage[347] = 32'd0;
    storage[348] = 32'd0;
    storage[349] = 32'd0;
    storage[350] = 32'd0;
    storage[351] = 32'd0;
    storage[352] = 32'd0;
    storage[353] = 32'd0;
    storage[354] = 32'd0;
    storage[355] = 32'd0;
    storage[356] = 32'd0;
    storage[357] = 32'd0;
    storage[358] = 32'd0;
    storage[359] = 32'd0;
    storage[360] = 32'd0;
    storage[361] = 32'd0;
    storage[362] = 32'd0;
    storage[363] = 32'd0;
    storage[364] = 32'd0;
    storage[365] = 32'd0;
    storage[366] = 32'd0;
    storage[367] = 32'd0;
    storage[368] = 32'd0;
    storage[369] = 32'd0;
    storage[370] = 32'd0;
    storage[371] = 32'd0;
    storage[372] = 32'd0;
    storage[373] = 32'd0;
    storage[374] = 32'd0;
    storage[375] = 32'd0;
    storage[376] = 32'd0;
    storage[377] = 32'd0;
    storage[378] = 32'd0;
    storage[379] = 32'd0;
    storage[380] = 32'd0;
    storage[381] = 32'd0;
    storage[382] = 32'd0;
    storage[383] = 32'd0;
    storage[384] = 32'd0;
    storage[385] = 32'd0;
    storage[386] = 32'd0;
    storage[387] = 32'd0;
    storage[388] = 32'd0;
    storage[389] = 32'd0;
    storage[390] = 32'd0;
    storage[391] = 32'd0;
    storage[392] = 32'd0;
    storage[393] = 32'd0;
    storage[394] = 32'd0;
    storage[395] = 32'd0;
    storage[396] = 32'd0;
    storage[397] = 32'd0;
    storage[398] = 32'd0;
    storage[399] = 32'd0;
    storage[400] = 32'd0;
    storage[401] = 32'd0;
    storage[402] = 32'd0;
    storage[403] = 32'd0;
    storage[404] = 32'd0;
    storage[405] = 32'd0;
    storage[406] = 32'd0;
    storage[407] = 32'd0;
    storage[408] = 32'd0;
    storage[409] = 32'd0;
    storage[410] = 32'd0;
    storage[411] = 32'd0;
    storage[412] = 32'd0;
    storage[413] = 32'd0;
    storage[414] = 32'd0;
    storage[415] = 32'd0;
    storage[416] = 32'd0;
    storage[417] = 32'd0;
    storage[418] = 32'd0;
    storage[419] = 32'd0;
    storage[420] = 32'd0;
    storage[421] = 32'd0;
    storage[422] = 32'd0;
    storage[423] = 32'd0;
    storage[424] = 32'd0;
    storage[425] = 32'd0;
    storage[426] = 32'd0;
    storage[427] = 32'd0;
    storage[428] = 32'd0;
    storage[429] = 32'd0;
    storage[430] = 32'd0;
    storage[431] = 32'd0;
    storage[432] = 32'd0;
    storage[433] = 32'd0;
    storage[434] = 32'd0;
    storage[435] = 32'd0;
    storage[436] = 32'd0;
    storage[437] = 32'd0;
    storage[438] = 32'd0;
    storage[439] = 32'd0;
    storage[440] = 32'd0;
    storage[441] = 32'd0;
    storage[442] = 32'd0;
    storage[443] = 32'd0;
    storage[444] = 32'd0;
    storage[445] = 32'd0;
    storage[446] = 32'd0;
    storage[447] = 32'd0;
    storage[448] = 32'd0;
    storage[449] = 32'd0;
    storage[450] = 32'd0;
    storage[451] = 32'd0;
    storage[452] = 32'd0;
    storage[453] = 32'd0;
    storage[454] = 32'd0;
    storage[455] = 32'd0;
    storage[456] = 32'd0;
    storage[457] = 32'd0;
    storage[458] = 32'd0;
    storage[459] = 32'd0;
    storage[460] = 32'd0;
    storage[461] = 32'd0;
    storage[462] = 32'd0;
    storage[463] = 32'd0;
    storage[464] = 32'd0;
    storage[465] = 32'd0;
    storage[466] = 32'd0;
    storage[467] = 32'd0;
    storage[468] = 32'd0;
    storage[469] = 32'd0;
    storage[470] = 32'd0;
    storage[471] = 32'd0;
    storage[472] = 32'd0;
    storage[473] = 32'd0;
    storage[474] = 32'd0;
    storage[475] = 32'd0;
    storage[476] = 32'd0;
    storage[477] = 32'd0;
    storage[478] = 32'd0;
    storage[479] = 32'd0;
    storage[480] = 32'd0;
    storage[481] = 32'd0;
    storage[482] = 32'd0;
    storage[483] = 32'd0;
    storage[484] = 32'd0;
    storage[485] = 32'd0;
    storage[486] = 32'd0;
    storage[487] = 32'd0;
    storage[488] = 32'd0;
    storage[489] = 32'd0;
    storage[490] = 32'd0;
    storage[491] = 32'd0;
    storage[492] = 32'd0;
    storage[493] = 32'd0;
    storage[494] = 32'd0;
    storage[495] = 32'd0;
    storage[496] = 32'd0;
    storage[497] = 32'd0;
    storage[498] = 32'd0;
    storage[499] = 32'd0;
    storage[500] = 32'd0;
    storage[501] = 32'd0;
    storage[502] = 32'd0;
    storage[503] = 32'd0;
    storage[504] = 32'd0;
    storage[505] = 32'd0;
    storage[506] = 32'd0;
    storage[507] = 32'd0;
    storage[508] = 32'd0;
    storage[509] = 32'd0;
    storage[510] = 32'd0;
    storage[511] = 32'd0;
    storage[512] = 32'd0;
    storage[513] = 32'd0;
    storage[514] = 32'd0;
    storage[515] = 32'd0;
    storage[516] = 32'd0;
    storage[517] = 32'd0;
    storage[518] = 32'd0;
    storage[519] = 32'd0;
    storage[520] = 32'd0;
    storage[521] = 32'd0;
    storage[522] = 32'd0;
    storage[523] = 32'd0;
    storage[524] = 32'd0;
    storage[525] = 32'd0;
    storage[526] = 32'd0;
    storage[527] = 32'd0;
    storage[528] = 32'd0;
    storage[529] = 32'd0;
    storage[530] = 32'd0;
    storage[531] = 32'd0;
    storage[532] = 32'd0;
    storage[533] = 32'd0;
    storage[534] = 32'd0;
    storage[535] = 32'd0;
    storage[536] = 32'd0;
    storage[537] = 32'd0;
    storage[538] = 32'd0;
    storage[539] = 32'd0;
    storage[540] = 32'd0;
    storage[541] = 32'd0;
    storage[542] = 32'd0;
    storage[543] = 32'd0;
    storage[544] = 32'd0;
    storage[545] = 32'd0;
    storage[546] = 32'd0;
    storage[547] = 32'd0;
    storage[548] = 32'd0;
    storage[549] = 32'd0;
    storage[550] = 32'd0;
    storage[551] = 32'd0;
    storage[552] = 32'd0;
    storage[553] = 32'd0;
    storage[554] = 32'd0;
    storage[555] = 32'd0;
    storage[556] = 32'd0;
    storage[557] = 32'd0;
    storage[558] = 32'd0;
    storage[559] = 32'd0;
    storage[560] = 32'd0;
    storage[561] = 32'd0;
    storage[562] = 32'd0;
    storage[563] = 32'd0;
    storage[564] = 32'd0;
    storage[565] = 32'd0;
    storage[566] = 32'd0;
    storage[567] = 32'd0;
    storage[568] = 32'd0;
    storage[569] = 32'd0;
    storage[570] = 32'd0;
    storage[571] = 32'd0;
    storage[572] = 32'd0;
    storage[573] = 32'd0;
    storage[574] = 32'd0;
    storage[575] = 32'd0;
    storage[576] = 32'd0;
    storage[577] = 32'd0;
    storage[578] = 32'd0;
    storage[579] = 32'd0;
    storage[580] = 32'd0;
    storage[581] = 32'd0;
    storage[582] = 32'd0;
    storage[583] = 32'd0;
    storage[584] = 32'd0;
    storage[585] = 32'd0;
    storage[586] = 32'd0;
    storage[587] = 32'd0;
    storage[588] = 32'd0;
    storage[589] = 32'd0;
    storage[590] = 32'd0;
    storage[591] = 32'd0;
    storage[592] = 32'd0;
    storage[593] = 32'd0;
    storage[594] = 32'd0;
    storage[595] = 32'd0;
    storage[596] = 32'd0;
    storage[597] = 32'd0;
    storage[598] = 32'd0;
    storage[599] = 32'd0;
    storage[600] = 32'd0;
    storage[601] = 32'd0;
    storage[602] = 32'd0;
    storage[603] = 32'd0;
    storage[604] = 32'd0;
    storage[605] = 32'd0;
    storage[606] = 32'd0;
    storage[607] = 32'd0;
    storage[608] = 32'd0;
    storage[609] = 32'd0;
    storage[610] = 32'd0;
    storage[611] = 32'd0;
    storage[612] = 32'd0;
    storage[613] = 32'd0;
    storage[614] = 32'd0;
    storage[615] = 32'd0;
    storage[616] = 32'd0;
    storage[617] = 32'd0;
    storage[618] = 32'd0;
    storage[619] = 32'd0;
    storage[620] = 32'd0;
    storage[621] = 32'd0;
    storage[622] = 32'd0;
    storage[623] = 32'd0;
    storage[624] = 32'd0;
    storage[625] = 32'd0;
    storage[626] = 32'd0;
    storage[627] = 32'd0;
    storage[628] = 32'd0;
    storage[629] = 32'd0;
    storage[630] = 32'd0;
    storage[631] = 32'd0;
    storage[632] = 32'd0;
    storage[633] = 32'd0;
    storage[634] = 32'd0;
    storage[635] = 32'd0;
    storage[636] = 32'd0;
    storage[637] = 32'd0;
    storage[638] = 32'd0;
    storage[639] = 32'd0;
    storage[640] = 32'd0;
    storage[641] = 32'd0;
    storage[642] = 32'd0;
    storage[643] = 32'd0;
    storage[644] = 32'd0;
    storage[645] = 32'd0;
    storage[646] = 32'd0;
    storage[647] = 32'd0;
    storage[648] = 32'd0;
    storage[649] = 32'd0;
    storage[650] = 32'd0;
    storage[651] = 32'd0;
    storage[652] = 32'd0;
    storage[653] = 32'd0;
    storage[654] = 32'd0;
    storage[655] = 32'd0;
    storage[656] = 32'd0;
    storage[657] = 32'd0;
    storage[658] = 32'd0;
    storage[659] = 32'd0;
    storage[660] = 32'd0;
    storage[661] = 32'd0;
    storage[662] = 32'd0;
    storage[663] = 32'd0;
    storage[664] = 32'd0;
    storage[665] = 32'd0;
    storage[666] = 32'd0;
    storage[667] = 32'd0;
    storage[668] = 32'd0;
    storage[669] = 32'd0;
    storage[670] = 32'd0;
    storage[671] = 32'd0;
    storage[672] = 32'd0;
    storage[673] = 32'd0;
    storage[674] = 32'd0;
    storage[675] = 32'd0;
    storage[676] = 32'd0;
    storage[677] = 32'd0;
    storage[678] = 32'd0;
    storage[679] = 32'd0;
    storage[680] = 32'd0;
    storage[681] = 32'd0;
    storage[682] = 32'd0;
    storage[683] = 32'd0;
    storage[684] = 32'd0;
    storage[685] = 32'd0;
    storage[686] = 32'd0;
    storage[687] = 32'd0;
    storage[688] = 32'd0;
    storage[689] = 32'd0;
    storage[690] = 32'd0;
    storage[691] = 32'd0;
    storage[692] = 32'd0;
    storage[693] = 32'd0;
    storage[694] = 32'd0;
    storage[695] = 32'd0;
    storage[696] = 32'd0;
    storage[697] = 32'd0;
    storage[698] = 32'd0;
    storage[699] = 32'd0;
    storage[700] = 32'd0;
    storage[701] = 32'd0;
    storage[702] = 32'd0;
    storage[703] = 32'd0;
    storage[704] = 32'd0;
    storage[705] = 32'd0;
    storage[706] = 32'd0;
    storage[707] = 32'd0;
    storage[708] = 32'd0;
    storage[709] = 32'd0;
    storage[710] = 32'd0;
    storage[711] = 32'd0;
    storage[712] = 32'd0;
    storage[713] = 32'd0;
    storage[714] = 32'd0;
    storage[715] = 32'd0;
    storage[716] = 32'd0;
    storage[717] = 32'd0;
    storage[718] = 32'd0;
    storage[719] = 32'd0;
    storage[720] = 32'd0;
    storage[721] = 32'd0;
    storage[722] = 32'd0;
    storage[723] = 32'd0;
    storage[724] = 32'd0;
    storage[725] = 32'd0;
    storage[726] = 32'd0;
    storage[727] = 32'd0;
    storage[728] = 32'd0;
    storage[729] = 32'd0;
    storage[730] = 32'd0;
    storage[731] = 32'd0;
    storage[732] = 32'd0;
    storage[733] = 32'd0;
    storage[734] = 32'd0;
    storage[735] = 32'd0;
    storage[736] = 32'd0;
    storage[737] = 32'd0;
    storage[738] = 32'd0;
    storage[739] = 32'd0;
    storage[740] = 32'd0;
    storage[741] = 32'd0;
    storage[742] = 32'd0;
    storage[743] = 32'd0;
    storage[744] = 32'd0;
    storage[745] = 32'd0;
    storage[746] = 32'd0;
    storage[747] = 32'd0;
    storage[748] = 32'd0;
    storage[749] = 32'd0;
    storage[750] = 32'd0;
    storage[751] = 32'd0;
    storage[752] = 32'd0;
    storage[753] = 32'd0;
    storage[754] = 32'd0;
    storage[755] = 32'd0;
    storage[756] = 32'd0;
    storage[757] = 32'd0;
    storage[758] = 32'd0;
    storage[759] = 32'd0;
    storage[760] = 32'd0;
    storage[761] = 32'd0;
    storage[762] = 32'd0;
    storage[763] = 32'd0;
    storage[764] = 32'd0;
    storage[765] = 32'd0;
    storage[766] = 32'd0;
    storage[767] = 32'd0;
    storage[768] = 32'd0;
    storage[769] = 32'd0;
    storage[770] = 32'd0;
    storage[771] = 32'd0;
    storage[772] = 32'd0;
    storage[773] = 32'd0;
    storage[774] = 32'd0;
    storage[775] = 32'd0;
    storage[776] = 32'd0;
    storage[777] = 32'd0;
    storage[778] = 32'd0;
    storage[779] = 32'd0;
    storage[780] = 32'd0;
    storage[781] = 32'd0;
    storage[782] = 32'd0;
    storage[783] = 32'd0;
    storage[784] = 32'd0;
    storage[785] = 32'd0;
    storage[786] = 32'd0;
    storage[787] = 32'd0;
    storage[788] = 32'd0;
    storage[789] = 32'd0;
    storage[790] = 32'd0;
    storage[791] = 32'd0;
    storage[792] = 32'd0;
    storage[793] = 32'd0;
    storage[794] = 32'd0;
    storage[795] = 32'd0;
    storage[796] = 32'd0;
    storage[797] = 32'd0;
    storage[798] = 32'd0;
    storage[799] = 32'd0;
    storage[800] = 32'd0;
    storage[801] = 32'd0;
    storage[802] = 32'd0;
    storage[803] = 32'd0;
    storage[804] = 32'd0;
    storage[805] = 32'd0;
    storage[806] = 32'd0;
    storage[807] = 32'd0;
    storage[808] = 32'd0;
    storage[809] = 32'd0;
    storage[810] = 32'd0;
    storage[811] = 32'd0;
    storage[812] = 32'd0;
    storage[813] = 32'd0;
    storage[814] = 32'd0;
    storage[815] = 32'd0;
    storage[816] = 32'd0;
    storage[817] = 32'd0;
    storage[818] = 32'd0;
    storage[819] = 32'd0;
    storage[820] = 32'd0;
    storage[821] = 32'd0;
    storage[822] = 32'd0;
    storage[823] = 32'd0;
    storage[824] = 32'd0;
    storage[825] = 32'd0;
    storage[826] = 32'd0;
    storage[827] = 32'd0;
    storage[828] = 32'd0;
    storage[829] = 32'd0;
    storage[830] = 32'd0;
    storage[831] = 32'd0;
    storage[832] = 32'd0;
    storage[833] = 32'd0;
    storage[834] = 32'd0;
    storage[835] = 32'd0;
    storage[836] = 32'd0;
    storage[837] = 32'd0;
    storage[838] = 32'd0;
    storage[839] = 32'd0;
    storage[840] = 32'd0;
    storage[841] = 32'd0;
    storage[842] = 32'd0;
    storage[843] = 32'd0;
    storage[844] = 32'd0;
    storage[845] = 32'd0;
    storage[846] = 32'd0;
    storage[847] = 32'd0;
    storage[848] = 32'd0;
    storage[849] = 32'd0;
    storage[850] = 32'd0;
    storage[851] = 32'd0;
    storage[852] = 32'd0;
    storage[853] = 32'd0;
    storage[854] = 32'd0;
    storage[855] = 32'd0;
    storage[856] = 32'd0;
    storage[857] = 32'd0;
    storage[858] = 32'd0;
    storage[859] = 32'd0;
    storage[860] = 32'd0;
    storage[861] = 32'd0;
    storage[862] = 32'd0;
    storage[863] = 32'd0;
    storage[864] = 32'd0;
    storage[865] = 32'd0;
    storage[866] = 32'd0;
    storage[867] = 32'd0;
    storage[868] = 32'd0;
    storage[869] = 32'd0;
    storage[870] = 32'd0;
    storage[871] = 32'd0;
    storage[872] = 32'd0;
    storage[873] = 32'd0;
    storage[874] = 32'd0;
    storage[875] = 32'd0;
    storage[876] = 32'd0;
    storage[877] = 32'd0;
    storage[878] = 32'd0;
    storage[879] = 32'd0;
    storage[880] = 32'd0;
    storage[881] = 32'd0;
    storage[882] = 32'd0;
    storage[883] = 32'd0;
    storage[884] = 32'd0;
    storage[885] = 32'd0;
    storage[886] = 32'd0;
    storage[887] = 32'd0;
    storage[888] = 32'd0;
    storage[889] = 32'd0;
    storage[890] = 32'd0;
    storage[891] = 32'd0;
    storage[892] = 32'd0;
    storage[893] = 32'd0;
    storage[894] = 32'd0;
    storage[895] = 32'd0;
    storage[896] = 32'd0;
    storage[897] = 32'd0;
    storage[898] = 32'd0;
    storage[899] = 32'd0;
    storage[900] = 32'd0;
    storage[901] = 32'd0;
    storage[902] = 32'd0;
    storage[903] = 32'd0;
    storage[904] = 32'd0;
    storage[905] = 32'd0;
    storage[906] = 32'd0;
    storage[907] = 32'd0;
    storage[908] = 32'd0;
    storage[909] = 32'd0;
    storage[910] = 32'd0;
    storage[911] = 32'd0;
    storage[912] = 32'd0;
    storage[913] = 32'd0;
    storage[914] = 32'd0;
    storage[915] = 32'd0;
    storage[916] = 32'd0;
    storage[917] = 32'd0;
    storage[918] = 32'd0;
    storage[919] = 32'd0;
    storage[920] = 32'd0;
    storage[921] = 32'd0;
    storage[922] = 32'd0;
    storage[923] = 32'd0;
    storage[924] = 32'd0;
    storage[925] = 32'd0;
    storage[926] = 32'd0;
    storage[927] = 32'd0;
    storage[928] = 32'd0;
    storage[929] = 32'd0;
    storage[930] = 32'd0;
    storage[931] = 32'd0;
    storage[932] = 32'd0;
    storage[933] = 32'd0;
    storage[934] = 32'd0;
    storage[935] = 32'd0;
    storage[936] = 32'd0;
    storage[937] = 32'd0;
    storage[938] = 32'd0;
    storage[939] = 32'd0;
    storage[940] = 32'd0;
    storage[941] = 32'd0;
    storage[942] = 32'd0;
    storage[943] = 32'd0;
    storage[944] = 32'd0;
    storage[945] = 32'd0;
    storage[946] = 32'd0;
    storage[947] = 32'd0;
    storage[948] = 32'd0;
    storage[949] = 32'd0;
    storage[950] = 32'd0;
    storage[951] = 32'd0;
    storage[952] = 32'd0;
    storage[953] = 32'd0;
    storage[954] = 32'd0;
    storage[955] = 32'd0;
    storage[956] = 32'd0;
    storage[957] = 32'd0;
    storage[958] = 32'd0;
    storage[959] = 32'd0;
    storage[960] = 32'd0;
    storage[961] = 32'd0;
    storage[962] = 32'd0;
    storage[963] = 32'd0;
    storage[964] = 32'd0;
    storage[965] = 32'd0;
    storage[966] = 32'd0;
    storage[967] = 32'd0;
    storage[968] = 32'd0;
    storage[969] = 32'd0;
    storage[970] = 32'd0;
    storage[971] = 32'd0;
    storage[972] = 32'd0;
    storage[973] = 32'd0;
    storage[974] = 32'd0;
    storage[975] = 32'd0;
    storage[976] = 32'd0;
    storage[977] = 32'd0;
    storage[978] = 32'd0;
    storage[979] = 32'd0;
    storage[980] = 32'd0;
    storage[981] = 32'd0;
    storage[982] = 32'd0;
    storage[983] = 32'd0;
    storage[984] = 32'd0;
    storage[985] = 32'd0;
    storage[986] = 32'd0;
    storage[987] = 32'd0;
    storage[988] = 32'd0;
    storage[989] = 32'd0;
    storage[990] = 32'd0;
    storage[991] = 32'd0;
    storage[992] = 32'd0;
    storage[993] = 32'd0;
    storage[994] = 32'd0;
    storage[995] = 32'd0;
    storage[996] = 32'd0;
    storage[997] = 32'd0;
    storage[998] = 32'd0;
    storage[999] = 32'd0;
    storage[1000] = 32'd0;
    storage[1001] = 32'd0;
    storage[1002] = 32'd0;
    storage[1003] = 32'd0;
    storage[1004] = 32'd0;
    storage[1005] = 32'd0;
    storage[1006] = 32'd0;
    storage[1007] = 32'd0;
    storage[1008] = 32'd0;
    storage[1009] = 32'd0;
    storage[1010] = 32'd0;
    storage[1011] = 32'd0;
    storage[1012] = 32'd0;
    storage[1013] = 32'd0;
    storage[1014] = 32'd0;
    storage[1015] = 32'd0;
    storage[1016] = 32'd0;
    storage[1017] = 32'd0;
    storage[1018] = 32'd0;
    storage[1019] = 32'd0;
    storage[1020] = 32'd0;
    storage[1021] = 32'd0;
    storage[1022] = 32'd0;
    storage[1023] = 32'd0;
  end
  always @(posedge clk) begin
    if (storage_w_en)
      storage[storage_w_addr] <= storage_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    if (storage_r_en) begin
      _0_ <= storage[storage_r_addr];
    end
  end
  assign storage_r_data = _0_;
  assign \$11  = produce + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *) 1'h1;
  assign \$13  = r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *) r_en;
  assign \$16  = consume + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:91" *) 1'h1;
  assign \$18  = w_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *) w_en;
  assign \$21  = r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *) r_en;
  assign \$20  = ~ (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *) \$21 ;
  assign \$24  = \$18  & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *) \$20 ;
  assign \$27  = level + (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:168" *) 1'h1;
  assign \$2  = level != (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:134" *) 11'h400;
  assign \$29  = r_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:140" *) r_en;
  assign \$32  = w_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *) w_en;
  assign \$31  = ~ (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *) \$32 ;
  assign \$35  = \$29  & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *) \$31 ;
  assign \$38  = level - (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:170" *) 1'h1;
  assign \$4  = | (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:135" *) level;
  assign \$6  = w_en & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:153" *) w_rdy;
  assign \$8  = w_rdy & (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:141" *) w_en;
  always @(posedge clk)
    level <= \level$next ;
  always @(posedge clk)
    consume <= \consume$next ;
  always @(posedge clk)
    produce <= \produce$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$59 ) begin end
    \consume$next  = consume;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:164" *)
    casez (\$13 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:164" */
      1'h1:
          \consume$next  = \$16 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \consume$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$59 ) begin end
    \level$next  = level;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" *)
    casez (\$24 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:167" */
      1'h1:
          \level$next  = \$27 [10:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" *)
    casez (\$35 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:169" */
      1'h1:
          \level$next  = \$38 [10:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \level$next  = 11'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$59 ) begin end
    \produce$next  = produce;
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:155" *)
    casez (\$8 )
      /* src = "/usr/local/lib/python3.10/dist-packages/amaranth/lib/fifo.py:155" */
      1'h1:
          \produce$next  = \$11 [9:0];
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \produce$next  = 10'h000;
    endcase
  end
  assign \$10  = \$11 ;
  assign \$15  = \$16 ;
  assign \$26  = \$27 ;
  assign \$37  = \$38 ;
  assign storage_r_en = r_en;
  assign r_data = storage_r_data;
  assign storage_r_addr = consume;
  assign storage_w_en = \$6 ;
  assign storage_w_data = w_data;
  assign storage_w_addr = produce;
  assign r_level = level;
  assign w_level = level;
  assign r_rdy = \$4 ;
  assign w_rdy = \$2 ;
endmodule
