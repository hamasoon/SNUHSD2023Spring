/* Generated by Amaranth Yosys 0.25 (PyPI ver 0.25.0.0.post70, git sha1 e02b7f64b) */

(* \amaranth.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "Amaranth" *)
module top(dat_r, dat_w, we, clk, rst, adr);
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:8" *)
  input [2:0] adr;
  wire [2:0] adr;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:9" *)
  output [31:0] dat_r;
  wire [31:0] dat_r;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:10" *)
  input [31:0] dat_w;
  wire [31:0] dat_w;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:18" *)
  wire [2:0] mem_r_addr;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:18" *)
  wire [31:0] mem_r_data;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:19" *)
  wire [2:0] mem_w_addr;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:19" *)
  wire [31:0] mem_w_data;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:19" *)
  wire mem_w_en;
  (* src = "/usr/local/lib/python3.10/dist-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/data/Github/SNUHSD2023Spring/Lab4/test_memory.py:11" *)
  input we;
  wire we;
  reg [31:0] mem [7:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [2:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem_r_addr;
  end
  assign mem_r_data = mem[_0_];
  assign mem_w_en = we;
  assign mem_w_data = dat_w;
  assign mem_w_addr = adr;
  assign dat_r = mem_r_data;
  assign mem_r_addr = adr;
endmodule
