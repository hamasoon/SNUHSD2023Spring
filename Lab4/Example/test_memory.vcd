$comment Generated by Amaranth $end
$date 2023-04-04 21:37:52.261051 $end
$timescale 1 ps $end
$scope module bench $end
$scope module top $end
$var wire 3 ! mem_r_addr $end
$var wire 3 " adr $end
$var wire 32 # dat_r $end
$var wire 32 $ mem_r_data $end
$var wire 3 % mem_w_addr $end
$var wire 32 & mem_w_data $end
$var wire 32 ' dat_w $end
$var wire 1 ( mem_w_en $end
$var wire 1 ) we $end
$scope module rdport $end
$var wire 3 ! mem_r_addr $end
$var wire 32 $ mem_r_data $end
$var wire 1 * clk $end
$var wire 1 + rst $end
$var wire 3 , latch_addr $end
$var wire 32 - memory(0) $end
$var wire 32 . memory(1) $end
$var wire 32 / memory(2) $end
$var wire 32 0 memory(3) $end
$var wire 32 1 memory(4) $end
$var wire 32 2 memory(5) $end
$var wire 32 3 memory(6) $end
$var wire 32 4 memory(7) $end
$upscope $end
$scope module wrport $end
$var wire 3 % mem_w_addr $end
$var wire 32 & mem_w_data $end
$var wire 1 ( mem_w_en $end
$var wire 1 * clk $end
$var wire 1 + rst $end
$var wire 32 - memory(0) $end
$var wire 32 . memory(1) $end
$var wire 32 / memory(2) $end
$var wire 32 0 memory(3) $end
$var wire 32 1 memory(4) $end
$var wire 32 2 memory(5) $end
$var wire 32 3 memory(6) $end
$var wire 32 4 memory(7) $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
b0 #
b0 $
b0 %
b0 &
b0 '
0(
0)
0*
0+
b0 ,
b0 -
b0 .
b0 /
b0 0
b0 1
b0 2
b0 3
b0 4
$end
#500000
b100101001101 &
1)
1(
1*
b100101001101 '
#1000000
0*
#1500000
b100101001101 -
b1 %
b1 !
b1010100101000011 &
b100101001101 #
b100101001101 $
1*
b1 "
b1010100101000011 '
#2000000
0*
#2500000
b10 %
b10 !
b101011100110 &
b1010100101000011 #
b1010100101000011 .
b1010100101000011 $
1*
b10 "
b101011100110 '
b1 ,
#3000000
0*
#3500000
b101011100110 /
b11 %
b11 !
b110010010011 &
b101011100110 #
b101011100110 $
1*
b11 "
b110010010011 '
b10 ,
#4000000
0*
#4500000
b100 %
b100 !
b10101111010111 &
b110010010011 #
b110010010011 0
b110010010011 $
1*
b100 "
b10101111010111 '
b11 ,
#5000000
0*
#5500000
b10101111010111 1
b101 %
b101 !
b111100001000000 &
b10101111010111 #
b10101111010111 $
1*
b101 "
b111100001000000 '
b100 ,
#6000000
0*
#6500000
b110 %
b110 !
b111100001000000 2
b1100011101111101 &
b111100001000000 #
b111100001000000 $
1*
b110 "
b1100011101111101 '
b101 ,
#7000000
0*
#7500000
b1100011101111101 3
b111 %
b111 !
b1000111011111100 &
b1100011101111101 #
b1100011101111101 $
1*
b111 "
b1000111011111100 '
b110 ,
#8000000
0*
#8500000
0)
b0 %
b1000111011111100 4
b0 !
b1000101000000001 &
b1000111011111100 #
0(
b1000111011111100 $
1*
b0 "
b1000101000000001 '
b111 ,
#9000000
0*
#9500000
b1 %
b1 !
b11000010011001 &
b100101001101 #
b100101001101 $
1*
b1 "
b11000010011001 '
b0 ,
#10000000
0*
#10500000
b10 %
b10 !
b11001011101010 &
b1010100101000011 #
b1010100101000011 $
1*
b10 "
b11001011101010 '
b1 ,
#11000000
0*
#11500000
b11 %
b11 !
b1001001111 &
b101011100110 #
b101011100110 $
1*
b11 "
b1001001111 '
b10 ,
#12000000
0*
#12500000
b100 %
b100 !
b1111100011101 &
b110010010011 #
b110010010011 $
1*
b100 "
b1111100011101 '
b11 ,
#13000000
0*
#13500000
b101 %
b101 !
b110001100111100 &
b10101111010111 #
b10101111010111 $
1*
b101 "
b110001100111100 '
b100 ,
#14000000
0*
#14500000
b110 %
b110 !
b1001110111 &
b111100001000000 #
b111100001000000 $
1*
b110 "
b1001110111 '
b101 ,
#15000000
0*
#15500000
b111 %
b111 !
b110010110000101 &
b1100011101111101 #
b1100011101111101 $
1*
b111 "
b110010110000101 '
b110 ,
#16000000
0*
#16500000
b1000111011111100 $
1*
b1000111011111100 #
b111 ,
#17000000
